@page "/PivotTable/Aggregation"

@using Syncfusion.EJ2.Blazor.PivotView

@*Hidden:Lines*@
@using ej2_blazor_samples
@using ej2_blazor_productdetails
@{
    SampleBrowser.CurrentSampleName = "Aggregation";
    SampleBrowser.CurrentControlName = "PivotTable";
    SampleBrowser.CurrentControlCategory = "PivotTable";
    SampleBrowser.CurrentControl = SampleBrowser.Config.PivotTable;
    SampleBrowser.TitleTag = "PivotTable . Aggregation . Syncfusion Blazor Components - Preview";
    SampleBrowser.MetaDescription = "This demo for Blazor Pivot Table component shows different types of aggregation for value fields.";
    SampleBrowser.ActionDescription = new string[] {
@"<p>
    This sample demonstrates the aggregate types like sum, average, min, max, count, distinct count, and more in the
        pivot table for quick business analysis. End users can also change the aggregation type of each field bound to
        the value axis in the field list at runtime.
</p>"
};
    SampleBrowser.Description = new string[] {
@" <p>
        The
        aggregate type can be set using the <code>Type</code> property in <code>PivotViewValue</code>. The built-in aggregates are:
    </p>
    <p>
        <code>Sum</code>, <code>Average</code>, <code>Min</code>, <code>Max</code>, <code>Count</code>,
        <code>Distinct Count</code>, <code>Product</code>,
        <code>Index</code>, <code>Population StDev</code>, <code>Sample StDev</code>, <code>Population Var</code>,
        <code>Sample Var</code>, <code>Running Totals</code>,
        <code>Difference From</code>, <code>% of Difference From</code>, <code>% of Grand Total</code>,
        <code>% of Column Total</code>, <code>% of Row Total</code>,
        <code>% of Parent Total</code>, <code>% of Parent Column Total</code>, <code>% of Parent Row Total.</code>
    </p> 

    <p>

     In this sample, you can also change the aggregate type for value fields at runtime using the dropdown icon via field list UI. Here we have set the aggregation type for the field <b>Sold Amount</b> to <b>Average</b> in the code behind.</p>"
};
}
@*End:Hidden*@

<div class="control-section">
    <div class="content-wrapper">
        <EjsPivotView TValue="PivotProductDetails" ShowFieldList=true>
            <PivotViewDataSourceSettings DataSource="@data" ExpandAll=false EnableSorting=true>
                <PivotViewColumns>
					<PivotViewColumn Name="Products"></PivotViewColumn>
                    <PivotViewColumn Name="Country"></PivotViewColumn>
                </PivotViewColumns>
                <PivotViewRows>
					<PivotViewRow Name="Year"></PivotViewRow>
                    <PivotViewRow Name="Quarter"></PivotViewRow>
                    
                </PivotViewRows>
                <PivotViewValues>
                    <PivotViewValue Name="Sold" Caption="Units Sold"></PivotViewValue>
                    <PivotViewValue Name="Amount" Caption="Sold Amount" Type=Syncfusion.EJ2.Blazor.PivotView.SummaryTypes.Avg></PivotViewValue>
                </PivotViewValues>
                <PivotViewFilters>
                    <PivotViewFilter Name="Product_Categories" Caption="Product Categories"></PivotViewFilter>
                </PivotViewFilters>
                <PivotViewFormatSettings>
                    <PivotViewFormatSetting Name="Amount" Format="C" UseGrouping=true></PivotViewFormatSetting>
                    <PivotViewFormatSetting Name="Sold" Format="N" UseGrouping=true></PivotViewFormatSetting>
                </PivotViewFormatSettings>
                <PivotViewDrilledMembers>
                    <PivotViewDrilledMember Name="Country" Items="@(new string[] { "France" })"></PivotViewDrilledMember>
                </PivotViewDrilledMembers>
            </PivotViewDataSourceSettings>
            <PivotViewGridSettings ColumnWidth="140"></PivotViewGridSettings>
        </EjsPivotView>
    </div>
</div>

<style>
    .e-pivotview {
        min-height: 200px;
    }
</style>

@code{

    public List<PivotProductDetails> data { get; set; }

    protected override void OnInitialized()
    {
        this.data = PivotProductDetails.GetProductData();
    }
   
}