@page "/PivotTable/ConditionalFormatting"

@using Syncfusion.EJ2.Blazor.PivotView
@using Syncfusion.EJ2.Blazor.Buttons

@*Hidden:Lines*@
@using ej2_blazor_samples
@using ej2_blazor_productdetails
@{
    SampleBrowser.CurrentSampleName = "Conditional Formatting";
    SampleBrowser.CurrentControlName = "PivotTable";
    SampleBrowser.CurrentControlCategory = "PivotTable";
    SampleBrowser.CurrentControl = SampleBrowser.Config.PivotTable;
    SampleBrowser.TitleTag = "PivotTable . Conditional Formatting . Syncfusion Blazor Components - Preview";
    SampleBrowser.MetaDescription = "This demo for Pivot Table component demonstrate formatting the appearance of the pivot table cells with values based on the applied conditions.";
    SampleBrowser.ActionDescription = new string[] {
@"<p>
    This sample demonstrates formatting the appearance of pivot table cells with user-defined styles based on applied
        conditions.
</p>"
};
    SampleBrowser.Description = new string[] {
    @"<p>Conditional formatting works only for cells with values,
        allowing the users to change its appearance such as background color, font color, font family, and font size
        based on specific conditions.
        Conditional formatting can be applied either through code behind or UI. To enable this option in code behind, set
        <code>AllowConditionalFormatting</code> in <code>EjsPivotView</code> to <b>true</b>.
        Use the <code>PivotViewConditionalFormatSetting</code> class in the pivot table along with the following properties.
    </p>
    <table>
        <tr>
            <td style='vertical-align: top;padding: 4px 0;'>
                <code>Measure :</code>
            </td>
            <td>Specifies the value field name for which style will be applied.</td>
        </tr>
        <tr>
            <td style='vertical-align: top;padding: 4px 0;'>
                <code>Condition :</code>
            </td>
            <td>Specifies the operator type like equals, greater than, less than, etc.</td>
        </tr>
        <tr>
            <td style='vertical-align: top;padding: 4px 0;'>
                <code>Value1 :</code>
            </td>
            <td>Specifies the start value.</td>
        </tr>
        <tr>
            <td style='vertical-align: top;padding: 4px 0;'>
                <code>Value2 :</code>
            </td>
            <td>Specifies the end value.</td>
        </tr>
        <tr>
            <td style='vertical-align: top;padding: 4px 0;'>
                <code>Style</code>
            </td>
            <td>Specifies the style for the cell.</td>
        </tr>
    </table>

    <p>
    Also, we have applied conditional formatting for the fields <b>Sold Amount</b> and <b>Units Sold</b> in code behind</p>"
};
}
@*End:Hidden*@


<div class="control-section">
    <div class="content-wrapper">
        <div class="column-8">
            <EjsPivotView TValue="PivotProductDetails" @ref="pivot" Width="100%" Height="340" AllowConditionalFormatting=true>
                <PivotViewDataSourceSettings DataSource="@data" ExpandAll=false EnableSorting=true>
                    <PivotViewColumns>
                        <PivotViewColumn Name="Year"></PivotViewColumn>
                        <PivotViewColumn Name="Quarter"></PivotViewColumn>
                    </PivotViewColumns>
                    <PivotViewRows>
                        <PivotViewRow Name="Country"></PivotViewRow>
                        <PivotViewRow Name="Products"></PivotViewRow>
                    </PivotViewRows>
                    <PivotViewValues>
                        <PivotViewValue Name="Sold" Caption="Units Sold"></PivotViewValue>
                        <PivotViewValue Name="Amount" Caption="Sold Amount"></PivotViewValue>
                    </PivotViewValues>
                    <PivotViewFilters>
                        <PivotViewFilter Name="Product_Categories" Caption="Product Categories"></PivotViewFilter>
                    </PivotViewFilters>
                    <PivotViewFormatSettings>
                        <PivotViewFormatSetting Name="Amount" Format="C" UseGrouping=true></PivotViewFormatSetting>
                        <PivotViewFormatSetting Name="Sold" Format="N" UseGrouping=true></PivotViewFormatSetting>
                    </PivotViewFormatSettings>
                    <PivotViewConditionalFormatSettings>
                        <PivotViewConditionalFormatSetting Measure="Amount" Conditions=Condition.GreaterThan Value1=1000>
                            <PivotViewStyle BackgroundColor="#80cbc4" Color="black" FontFamily="Tahoma" FontSize="12px">
                            </PivotViewStyle>
                        </PivotViewConditionalFormatSetting>
                        <PivotViewConditionalFormatSetting Measure="Sold" Conditions=Condition.Between Value1=500 Value2=40000>
                            <PivotViewStyle BackgroundColor="#f48fb1" Color="black" FontFamily="Tahoma" FontSize="12px">
                            </PivotViewStyle>
                        </PivotViewConditionalFormatSetting>
                    </PivotViewConditionalFormatSettings>
                </PivotViewDataSourceSettings>
                <PivotViewGridSettings ColumnWidth="140"></PivotViewGridSettings>
            </EjsPivotView>
        </div>
        <div class="column-4">
            <div style="height:300px; overflow:auto;">
                <h5>Properties:</h5> <br>
                  <EjsButton ID="conditional" IsPrimary="true" OnClick="conditionformat">APPLY FORMAT</EjsButton>
            </div>
            
        </div>
    </div>
</div>

<style>
    .e-pivotview {
        min-height: 200px;
    }
    .column-8{
        width: 70% !important;
        float: left !important;
    }
    .column-4{
        width: 27% !important;
        float: right !important;
    }
</style>

@code{
    EjsPivotView<PivotProductDetails> pivot;
    public List<PivotProductDetails> data { get; set; }

    protected override void OnInitialized()
    {
        this.data = PivotProductDetails.GetProductData();
    }
    public void conditionformat(Microsoft.AspNetCore.Components.Web.MouseEventArgs args)
    {
        this.pivot.ShowConditionalFormattingDialog();
    }
}