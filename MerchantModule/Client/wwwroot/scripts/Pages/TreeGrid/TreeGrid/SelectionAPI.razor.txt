@page "/TreeGrid/SelectionAPI"

@using Syncfusion.EJ2.Blazor.TreeGrid
@using Syncfusion.EJ2.Blazor.Grids
@using Syncfusion.EJ2.Blazor.Data
@using Syncfusion.EJ2.Blazor.Inputs
@using Syncfusion.EJ2.Blazor.Buttons
@using Syncfusion.EJ2.Blazor
@using ej2_blazor_samples
@using ej2_blazor_selfdata

@inherits SampleBaseComponent;

<div class="col-lg-9 control-section">
    <div class="content-wrapper">
        <div class="row">
            <EjsTreeGrid @ref="TreeGrid" DataSource="@TreeGridData" IdMapping="TaskID" ParentIdMapping="ParentID" TreeColumnIndex="1" AllowPaging="true" AllowSelection="true">
                <TreeGridSelectionSettings Type="Syncfusion.EJ2.Blazor.Grids.SelectionType.Multiple" Mode="Syncfusion.EJ2.Blazor.Grids.SelectionMode.Row"></TreeGridSelectionSettings>
                <TreeGridPageSettings PageSize="2"></TreeGridPageSettings>
                <TreeGridColumns>
                    <TreeGridColumn Field="TaskID" HeaderText="Task ID" Width="60" TextAlign="TextAlign.Right"></TreeGridColumn>
                    <TreeGridColumn Field="TaskName" HeaderText="Task Name" Width="100"></TreeGridColumn>
                    <TreeGridColumn Field="StartDate" HeaderText="Start Date" Format="d" Type=ColumnType.Date Width="90" TextAlign="TextAlign.Right"></TreeGridColumn>
                    <TreeGridColumn Field="Duration" HeaderText="Duration" Width="80" TextAlign="TextAlign.Right"></TreeGridColumn>
                    <TreeGridColumn Field="Progress" HeaderText="Progress" Width="80"></TreeGridColumn>
                </TreeGridColumns>
            </EjsTreeGrid>

        </div>
    </div>
</div>

<div class="col-lg-3 property-section">
    <h4 style="margin-top:38px;">Properties</h4>

    <table id="property" style="width: 73%; height: 300px;">
        <tr>
            <td class="left-side" style="padding-right:15px;"><b>Select Rows</b></td>
        </tr>
        <tr>
            <td class="left-side" style="padding-right:15px;">Start</td>
            <td>
                <EjsNumericTextBox @ref="start" TValue="int" Min="0" Format="##"></EjsNumericTextBox>
            </td>
        </tr>
        <tr>
            <td class="left-side" style="padding-right:15px;">To</td>
            <td>
                <EjsNumericTextBox @ref="to" TValue="int" Min="1" Format="##"></EjsNumericTextBox>
            </td>
        </tr>
        <tr>
            <td class="left-side" style="padding-right:15px;"><b>Select Row</b></td>
            <td>
                <EjsButton OnClick="Select" IsPrimary="true">Select Row</EjsButton>
            </td>
        </tr>
        <tr>
            <td class="left-side" style="padding-right:15px;"><b>Clear Selection</b></td>
            <td>
                <EjsButton OnClick="Clear" IsPrimary="true">Clear Selection</EjsButton>
            </td>
        </tr>
    </table>
</div>

@code{

    EjsTreeGrid<SelfReferenceData> TreeGrid;

    EjsNumericTextBox<int> start;

    EjsNumericTextBox<int> to;

    public List<int> Rows { get; set; } = new List<int>();

    public List<SelfReferenceData> TreeGridData { get; set; }


    public void Select(MouseEventArgs Args)
    {

        int startrow = this.start.Value;
        int torow = this.to.Value;
        if (torow < startrow)
        {
            int swap = torow;
            torow = startrow;
            startrow = swap;
        }
        for(int i = startrow; i <= torow; i++)
        {
            this.Rows.Add(i);
        }

        this.TreeGrid.SelectRows(Rows.ToArray());
        this.Rows.Clear();

    }

    public void Clear(MouseEventArgs Args)
    {
        this.TreeGrid.ClearSelection();
        this.Rows.Clear();
    }


    protected override void OnInitialized()
    {
        this.TreeGridData = SelfReferenceData.GetTree().ToList();
    }
}
