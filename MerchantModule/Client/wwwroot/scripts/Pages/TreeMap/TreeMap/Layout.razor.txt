@page "/TreeMap/Layout"


@using Syncfusion.EJ2.Blazor.TreeMap
@using Syncfusion.EJ2.Blazor.DropDowns
@inherits SampleBaseComponent;


<div class="col-lg-9 control-section sb-property-border">
    <div>
        <EjsTreeMap WeightValuePath="GDP" DataSource="@Economics" RangeColorValuePath="GDP" TValue="Data" LayoutType="@layoutMode" RenderDirection="@renderMode">
            <TreeMapTitleSettings Text="Top 10 countries by GDP Nominal - 2015">
                <TreeMapTitleTextStyle Size="15px"></TreeMapTitleTextStyle>
            </TreeMapTitleSettings>
            <TreeMapTooltipSettings Visible="true" Format="${State}<br>Rank : ${Rank}"></TreeMapTooltipSettings>
            <TreeMapLeafItemSettings LabelPath="State" LabelFormat="${State}<br>$${GDP} Trillion<br>(${percentage} %)">
                <TreeMapLeafColorMappings>
                    <TreeMapLeafColorMapping From="1550" To="17946" Color='@("#9cbb59")' MinOpacity="0.7" MaxOpacity="1"></TreeMapLeafColorMapping>
                </TreeMapLeafColorMappings>
                <TreeMapLeafLabelStyle Color="#000000"></TreeMapLeafLabelStyle>
                <TreeMapLeafBorder Color="#000000" Width="0.5"></TreeMapLeafBorder>
            </TreeMapLeafItemSettings>
        </EjsTreeMap>
    </div>
    <div style="float: right; margin-right: 10px;">
        Source:
        <a href=" https://www.reinisfischer.com/top-10-largest-economies-world-gdp-nominal-2015" target="_blank">www.reinisfischer.com</a>
    </div>
</div>
<div class="col-lg-3 property-section">
    &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br>
    <div class="property-panel-section">
        <div class="property-panel-header">Properties</div>
        <div class="property-panel-content">
            <table id="property" style="width:100%" title="Properties">
                <tbody>

                    <tr style="height: 35px">
                        <td style="width: 70%" class="property-text">
                            Layout Type
                        </td>
                        <td style="width: 50%">
                            <EjsDropDownList Placeholder="Select smartlabel mode" DataSource="@LayoutList" Value="@layoutValue" Width="120px">
                                <DropDownListEvents TValue="string" ValueChange="LayoutTypechange"></DropDownListEvents>
                                <DropDownListFieldSettings text="Name" value="Value"></DropDownListFieldSettings>
                            </EjsDropDownList>
                        </td>
                    </tr>
                    <tr style="height: 35px">
                        <td style="width: 70%" class="property-text">
                            Render Direction
                        </td>
                        <td style="width: 50%">
                            <EjsDropDownList Placeholder="Select intersect action" DataSource="@RenderingList" Value="@renderValue" Width="120px">
                                <DropDownListEvents TValue="string" ValueChange="RenderDirectionchange"></DropDownListEvents>
                                <DropDownListFieldSettings text="Name" value="Value"></DropDownListFieldSettings>
                            </EjsDropDownList>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>

@code {
    public LayoutMode layoutMode = LayoutMode.Squarified;
    public RenderingMode renderMode = RenderingMode.TopLeftBottomRight;
    public string layoutValue = "Squarified";
    public string renderValue = "TopLeftBottomRight";
    public class DropdownList
    {
        public string Value { get; set; }
        public string Name { get; set; }
    };
    public List<DropdownList> LayoutList = new List<DropdownList> {
        new DropdownList { Value="Squarified", Name="Squarified" },
        new DropdownList { Value="SliceAndDiceHorizontal", Name="SliceAndDiceHorizontal" },
        new DropdownList { Value="SliceAndDiceVertical", Name="SliceAndDiceVertical" },
         new DropdownList { Value="SliceAndDiceAuto", Name="SliceAndDiceAuto" }
    };
    public List<DropdownList> RenderingList = new List<DropdownList> {
        new DropdownList { Value="TopLeftBottomRight", Name="TopLeftBottomRight" },
        new DropdownList { Value="TopRightBottomLeft", Name="TopRightBottomLeft" },
        new DropdownList { Value="BottomLeftTopRight", Name="BottomLeftTopRight" },
        new DropdownList { Value="BottomRightTopLeft", Name="BottomRightTopLeft" }
    };
    public void LayoutTypechange(Syncfusion.EJ2.Blazor.DropDowns.ChangeEventArgs<string> args)
    {
        layoutValue = args.Value;
        if (args.Value == "Squarified")
        {
            layoutMode = LayoutMode.Squarified;
        }
        else if (args.Value == "SliceAndDiceHorizontal")
        {
            layoutMode = LayoutMode.SliceAndDiceHorizontal;
        }
        else if (args.Value == "SliceAndDiceVertical")
        {
            layoutMode = LayoutMode.SliceAndDiceVertical;
        }
        else
        {
            layoutMode = LayoutMode.SliceAndDiceAuto;
        }
    }

    public void RenderDirectionchange(Syncfusion.EJ2.Blazor.DropDowns.ChangeEventArgs<string> args)
    {
        renderValue = args.Value;
        if (args.Value == "TopLeftBottomRight")
        {
            renderMode = RenderingMode.TopLeftBottomRight;
        }
        else if (args.Value == "BottomLeftTopRight")
        {
            renderMode = RenderingMode.BottomLeftTopRight;
        }
        else if (args.Value == "BottomRightTopLeft")
        {
            renderMode = RenderingMode.BottomRightTopLeft;
        }
        else
        {
            renderMode = RenderingMode.TopRightBottomLeft;
        }
    }

    public class Data
    {
        public string State;
        public double GDP;
        public double percentage;
        public double Rank;
    };
    public List<Data> Economics = new List<Data>
{
        new Data { State="United States", GDP=17946, percentage=11.08, Rank=1},
        new Data { State="China", GDP=10866, percentage=28.42, Rank=2 },
        new Data { State="Japan", GDP=4123, percentage=-30.78, Rank=3},
        new Data { State="Germany", GDP=3355, percentage=-5.19, Rank=4},
        new Data { State="United Kingdom", GDP=2848, percentage=8.28, Rank=5 },
        new Data { State="France", GDP=2421, percentage=-9.69, Rank=6 },
        new Data { State="India", GDP=2073, percentage=13.65, Rank=7 },
        new Data { State="Italy", GDP=1814, percentage=-12.45, Rank=8 },
        new Data { State="Brazil", GDP=1774, percentage=-27.88, Rank=9 },
        new Data { State="Canada", GDP=1550, percentage=-15.02, Rank=10 }
    };
}
