@page "/TreeMap/ColorMapping"

@using Syncfusion.EJ2.Blazor.TreeMap
@using Syncfusion.EJ2.Blazor.DropDowns
@using Syncfusion.EJ2.Blazor.Buttons
@inherits SampleBaseComponent;


<div class="col-lg-9 control-section sb-property-border">
    <EjsTreeMap Format="n" UseGroupingSeparator="true" RangeColorValuePath="@colorValuePath" EqualColorValuePath="@equalColorValuePath" WeightValuePath="Area" DataSource="@ColorDataSource">
        <TreeMapTitleSettings Text="Top 10 largest islands in the World">
            <TreeMapTitleTextStyle Size="15px"></TreeMapTitleTextStyle>
        </TreeMapTitleSettings>
        <TreeMapLegendSettings Visible="true" Position="LegendPosition.Bottom" Mode="LegendMode.Interactive" Height="10">
            <TreeMapLegendTitle Text="@legendText"></TreeMapLegendTitle>
        </TreeMapLegendSettings>
        <TreeMapTooltipSettings Visible="true" Format="Name: ${Name}<br>Area: ${Area} per square kms<br>Continent: ${Location}" Opacity="0.8"></TreeMapTooltipSettings>
        <TreeMapLeafItemSettings LabelPath="Name">
            <TreeMapLeafColorMappings>
                <TreeMapLeafColorMapping From="@colorMappingFromOne" MinOpacity="@minOpacity" MaxOpacity="maxOpacity" To="@colorMappingToOne" Color="@colorMappingColorOne" Label="@colorMappingLabelOne" Value="@colorMappingValueOne"></TreeMapLeafColorMapping>
                <TreeMapLeafColorMapping From="@colorMappingFromTwo" To="@colorMappingToTwo" Color="@colorMappingColorTwo" Label="@colorMappingLabelTwo" Value="@colorMappingValueTwo"></TreeMapLeafColorMapping>
                <TreeMapLeafColorMapping From="@colorMappingFromThree" To="@colorMappingToThree" Color="@colorMappingColorThree" Label="@colorMappingLabelThree" Value="@colorMappingValueThree"></TreeMapLeafColorMapping>
                <TreeMapLeafColorMapping From="@colorMappingFromFour" To="@colorMappingToFour" Color="@colorMappingColorFour" Label="@colorMappingLabelFour" Value="@colorMappingValueFour"></TreeMapLeafColorMapping>
                <TreeMapLeafColorMapping From="@colorMappingFromFive" To="@colorMappingToFive" Color="@colorMappingColorFive" Label="@colorMappingLabelFive" Value="@colorMappingValueFive"></TreeMapLeafColorMapping>
            </TreeMapLeafColorMappings>
            <TreeMapLeafBorder Color="white" Width="0.5"></TreeMapLeafBorder>
        </TreeMapLeafItemSettings>
    </EjsTreeMap>
</div>
<div class="col-lg-3 property-section">
    &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br>
    <div class="property-panel-section">
        <div class="property-panel-header">Properties</div>
        <div class="property-panel-content">
            <table style="width:100%" title="Properties">
                <tbody>

                    <tr style="height: 35px">
                        <td style="width: 70%" class="property-text">
                            Color Mapping Type
                        </td>
                        <td style="width: 50%">
                            <EjsDropDownList Placeholder="Select colorMapping Type" DataSource="@ColorMappingType" Value="@colorMappingTypeValue" Width="120px">
                                <DropDownListEvents TValue="string" ValueChange="colorMappingValueTypeChange"></DropDownListEvents>
                                <DropDownListFieldSettings Text="Name" Value="Value"></DropDownListFieldSettings>
                            </EjsDropDownList>
                        </td>
                    </tr>
                    <tr style="height: 35px"></tr>
                    <tr style="height: 35px;width:130%;display:@display">
                        <td style="width: 90%" class="property-text">
                            Change Opacity
                        </td>
                        <td style="width: 50%; ">
                            <EjsCheckBox ValueChange="opacityChange" Checked="@opacityChecked"></EjsCheckBox>
                        </td>
                    </tr>
                    <tr style="height: 70px;">
                        <td>
                            <div style="display: @minDisplay">Min Opacity </div>
                        </td>
                        <td>
                            <div>
                                <input type="range" value="@minRange" min="0" max="1" step="0.1" @onchange="minRangeChange" style="display: @minDisplay" />
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <div style="display: @minDisplay">Max Opacity </div>
                        </td>
                        <td>
                            <div>
                                <input type="range" value="@maxRange" min="0" max="1" step="0.1" @onchange="maxRangeChange" style="display: @minDisplay" />
                            </div>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>


@code{
    public string colorMappingTypeValue = "Range";
    public string equalColorValuePath = null;
    public string legendText = "Area";
    public string minDisplay = "none";
    public double minOpacity = 0;
    public double maxOpacity = 0;
    public double minRange = 0.5;
    public string display = "none";
    public double maxRange = 1;
    public Boolean opacityChecked;
    public string colorValuePath = "Area";
    public double? colorMappingFromOne = 100000;
    public double? colorMappingToOne = 250000;
    public string[] colorMappingColorOne = { "#547C84" };
    public string colorMappingLabelOne = "0.1M - 0.25M";
    public string colorMappingValueOne = null;

    public double? colorMappingFromTwo = 250000;
    public double? colorMappingToTwo = 550000;
    public string[] colorMappingColorTwo = { "#37AFAB" };
    public string colorMappingLabelTwo = "0.25M - 0.55M";
    public string colorMappingValueTwo = null;

    public double? colorMappingFromThree = 550000;
    public double? colorMappingToThree = 750000;
    public string[] colorMappingColorThree = { "#A4D6AD" };
    public string colorMappingLabelThree = "0.55M - 0.75M";
    public string colorMappingValueThree = null;

    public double? colorMappingFromFour = 750000;
    public double? colorMappingToFour = 2250000;
    public string[] colorMappingColorFour = { "#DEEBAE" };
    public string colorMappingLabelFour = "0.75M - 2M";
    public string colorMappingValueFour = null;

    public double? colorMappingFromFive = 0;
    public double? colorMappingToFive = 0;
    public string[] colorMappingColorFive = { null };
    public string colorMappingLabelFive = null;
    public string colorMappingValueFive = null;

    public void colorMappingValueTypeChange(Syncfusion.EJ2.Blazor.DropDowns.ChangeEventArgs<string> args)
    {
        colorMappingTypeValue = args.Value;
        if (colorMappingTypeValue == "Range")
        {
            minDisplay = "none";
            equalColorValuePath = null;
            display = "none";
            opacityChecked = false;
            legendText = "Area";
            colorValuePath = "Area";
            colorMappingFromOne = 100000;
            colorMappingToOne = 250000;
            colorMappingColorOne = new string[] { "#547C84" };
            colorMappingLabelOne = "0.1M - 0.25M";
            colorMappingValueOne = null;

            colorMappingFromTwo = 250000;
            colorMappingToTwo = 550000;
            colorMappingColorTwo = new string[] { "#A4D6AD" };
            colorMappingLabelTwo = "0.25M - 0.55M";
            colorMappingValueTwo = null;

            colorMappingFromThree = 550000;
            colorMappingToThree = 750000;
            colorMappingColorThree = new string[] { "#A4D6AD" };
            colorMappingLabelThree = "0.55M - 0.75M";
            colorMappingValueThree = null;

            colorMappingFromFour = 750000;
            colorMappingToFour = 2250000;
            colorMappingColorFour = new string[] { "#DEEBAE" };
            colorMappingLabelFour = "0.75M - 2M";
            colorMappingValueFour = null;

            colorMappingFromFive = null;
            colorMappingToFive = null;
            colorMappingColorFive = null;
            colorMappingLabelFive = null;
            colorMappingValueFive = null;
        }
        else if (colorMappingTypeValue == "Equal")
        {
            minDisplay = "none";
            display = "none";
            opacityChecked = false;
            legendText = "Continent";
            equalColorValuePath = "Location";
            colorValuePath = null;
            colorMappingFromOne = null;
            colorMappingToOne = null;
            colorMappingColorOne = null;
            colorMappingColorOne = new string[] { "#DEEBAE" };
            colorMappingLabelOne = null;
            colorMappingValueOne = "North America";

            colorMappingFromTwo = null;
            colorMappingToTwo = null;
            colorMappingColorTwo = null;
            colorMappingColorTwo = new string[] { "#A4D6AD" };
            colorMappingLabelTwo = null;
            colorMappingValueTwo = "Oceania";

            colorMappingFromThree = null;
            colorMappingToThree = null;
            colorMappingColorThree = null;
            colorMappingColorThree = new string[] { "#37AFAB" };
            colorMappingLabelThree = null;
            colorMappingValueThree = "Asia";

            colorMappingFromFour = null;
            colorMappingToFour = null;
            colorMappingColorFour = null;
            colorMappingColorFour = new string[] { "#547C84" };
            colorMappingLabelFour = null;
            colorMappingValueFour = "Africa";

            colorMappingFromFive = null;
            colorMappingToFive = null;
            colorMappingColorFive = null;
            colorMappingColorFive = new string[] { "#CEBF93" };
            colorMappingLabelFive = null;
            colorMappingValueFive = "Europe";
        }
        else
        {
            display = "block";
            equalColorValuePath = null;
            legendText = "Area";
            colorValuePath = "Area";
            colorMappingFromOne = 100000;
            colorMappingToOne = 2230800;
            colorMappingColorOne = new string[] { "#F0D6AD", "#19547B" };
            colorMappingLabelOne = "0.1M - 2M";
            colorMappingValueOne = null;

            colorMappingFromTwo = null;
            colorMappingToTwo = null;
            colorMappingColorTwo = null;
            colorMappingLabelTwo = null;
            colorMappingValueTwo = null;

            colorMappingFromThree = null;
            colorMappingToThree = null;
            colorMappingColorThree = null;
            colorMappingLabelThree = null;
            colorMappingValueThree = null;

            colorMappingFromFour = null;
            colorMappingToFour = null;
            colorMappingColorFour = null;
            colorMappingLabelFour = null;
            colorMappingValueFour = null;

            colorMappingFromFive = null;
            colorMappingToFive = null;
            colorMappingColorFive = null;
            colorMappingLabelFive = null;
            colorMappingValueFive = null;
        }

    }

    private void opacityChange(Syncfusion.EJ2.Blazor.Buttons.ChangeEventArgs args)
    {
        opacityChecked = args.Checked;
        minDisplay = (opacityChecked) ? "block" : "none";
    }
    private void minRangeChange(Microsoft.AspNetCore.Components.ChangeEventArgs args)
    {
        minRange = Convert.ToDouble(args.Value);
        minOpacity = minRange;
    }
    private void maxRangeChange(Microsoft.AspNetCore.Components.ChangeEventArgs args)
    {
        maxRange = Convert.ToDouble(args.Value);
        maxOpacity = maxRange;
    }
    public class type
    {
        public string Value { get; set; }
        public string Name { get; set; }
    };
    public List<type> ColorMappingType = new List<type> {
        new type { Value="Range", Name="Range" },
        new type { Value="Equal", Name="Equal" },
        new type { Value="Desaturation", Name="Desaturation" }
    };
    public class Data
    {
        public string Name;
        public string Location;
        public double Area;
        public double Population;
    };
    public List<Data> ColorDataSource = new List<Data>
{
        new Data { Name="Greenland", Area=2130800, Population=56483, Location="North America" },
        new Data { Name="New Guinea", Area=785753, Population=1306940, Location="Oceania"},
        new Data { Name="Borneo", Area=743330, Population=19804064, Location="Asia" },
        new Data { Name="Madagascar", Area=587713, Population=22005222, Location="Africa"},
        new Data { Name="Baffin Island", Area=507451, Population=10745, Location="North America" },
        new Data { Name="Sumatra", Area=443066, Population=50000000, Location="Asia" },
        new Data { Name="Honshu", Area=225800, Population=103000000, Location="Asia" },
        new Data { Name="Victoria Island", Area=217291, Population=1875, Location="North America"},
        new Data { Name="Great Britain", Area=209331, Population=60800000, Location="Europe" },
        new Data { Name="Ellesmere Island", Area=183965, Population=146, Location="North America" }
    };
}