@page "/StockChart/CandlestickandVolume"
@using Syncfusion.EJ2.Blazor.Charts
@using Newtonsoft.Json
@inherits SampleBaseComponent;

@if (dataSource == null)
{
    <div class="stockchartloader"></div>
}
else
{
    <div class="@loadClass"></div>
    <div class="@loadDiv">
        <EjsStockChart Title="AAPL Historical">
            <StockChartEvents Loaded="@ChartLoaded"></StockChartEvents>
            <StockChartChartArea>
                <StockChartChartAreaBorder Width="0"></StockChartChartAreaBorder>
            </StockChartChartArea>
            <StockChartPrimaryXAxis>
                <StockChartAxisMajorGridLines Width="0"></StockChartAxisMajorGridLines>
                <StockChartAxisCrosshairTooltip Enable="true"></StockChartAxisCrosshairTooltip>
            </StockChartPrimaryXAxis>
            <StockChartPrimaryYAxis LabelFormat="n0">
                <StockChartAxisLineStyle Width="0"></StockChartAxisLineStyle>
            </StockChartPrimaryYAxis>
            <StockChartTooltipSettings Enable="true"></StockChartTooltipSettings>
            <StockChartCrosshairSettings Enable="true"></StockChartCrosshairSettings>
            <StockChartAxes>
                <StockChartAxis RowIndex=1 Name="yAxis1" OpposedPosition="true">
                </StockChartAxis>
            </StockChartAxes>
            <StockChartRows>
                <StockChartRow Height="30%"></StockChartRow>
                <StockChartRow Height="70%"></StockChartRow>
            </StockChartRows>
            <StockChartSeriesCollection>
                <StockChartSeries DataSource="@dataSource" Type="ChartSeriesType.Candle" XName="date" YName="high" YAxisName="yAxis1" High="high" Low="low"></StockChartSeries>
                <StockChartSeries DataSource="@dataSource" Type="ChartSeriesType.Column" XName="date" YName="volume" High="high" Low="low" Name="Apple Inc"></StockChartSeries>
            </StockChartSeriesCollection>

        </EjsStockChart>
    </div>
    <style>
        .stockchartloader {
            border: 6px solid #f3f3f3;
            border-top: 6px solid #7a0fff;
            width: 40px;
            height: 40px;
            position: absolute;
            top: 46%;
            left: 46%;
            border-radius: 50%;
            -webkit-animation: loader 2s linear infinite;
            animation: loader 2s linear infinite;
        }      

        .stockchartdiv {
            visibility: hidden;
        }
    </style>
}
@code{
    private ChartData[] dataSource;
   
    protected override async Task OnInitializedAsync()
    {
        await Task.Run(() =>
        {
            dataSource = JsonConvert.DeserializeObject<ChartData[]>(System.IO.File.ReadAllText("./wwwroot/scripts/StockChartData/chartdata.json"));
        });
    }
    public class ChartData
    {
        public DateTime date { get; set; }
        public double open { get; set; }
        public double low { get; set; }
        public double close { get; set; }
        public double high { get; set; }
        public double volume { get; set; }
    }
    string loadClass = "stockchartloader";
    string loadDiv = "stockchartdiv";
     void ChartLoaded(IStockChartEventArgs args)
    {
        loadClass = "";
        loadDiv = "";
    }

}
