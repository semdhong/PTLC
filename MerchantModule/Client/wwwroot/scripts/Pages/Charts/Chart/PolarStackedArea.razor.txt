@page "/Charts/PolarStackedArea"
@using Syncfusion.EJ2.Blazor.Charts

@inherits SampleBaseComponent;
<div class="row">
<div class="col-lg-9 control-section">
    <EjsChart Title="GDP, Current Prices (in Billions)">
        <ChartTooltipSettings Enable="true">
        </ChartTooltipSettings>
        <ChartLegendSettings Visible="true">
        </ChartLegendSettings>
        <ChartPrimaryXAxis ValueType="Syncfusion.EJ2.Blazor.Charts.ValueType.Category" LabelPlacement="LabelPlacement.OnTicks" Interval="1" Coefficient="100"></ChartPrimaryXAxis>
        <ChartSeriesCollection>
            <ChartSeries DataSource="@dataSource" Name="2013" XName="x" Width="2" YName="y" Type="@seriesType" DrawType="ChartDrawType.StackingArea"></ChartSeries>
            <ChartSeries DataSource="@dataSource" Name="2014" XName="x" Width="2" YName="y1" Type="@seriesType" DrawType="ChartDrawType.StackingArea"></ChartSeries>
            <ChartSeries DataSource="@dataSource" Name="2015" XName="x" Width="2" YName="y2" Type="@seriesType" DrawType="ChartDrawType.StackingArea"></ChartSeries>
            <ChartSeries DataSource="@dataSource" Name="2016" XName="x" Width="2" YName="y3" Type="@seriesType" DrawType="ChartDrawType.StackingArea"></ChartSeries>
        </ChartSeriesCollection>
    </EjsChart>
</div>
    <div class="col-lg-3 property-section">
        <table id="property" style="width: 100%">
            <tr style="height:50px"><th>Properties</th></tr>
            <tr style="height: 50px">
                <td style="width: 50%">
                    <div>
                        Series Type:
                    </div>
                </td>
                <td style="width: 50%;">
                    <div>
                        <select id="SelectSeriesType" @onchange="changeSeriesType">
                            <option value="Polar">Polar</option>
                            <option value="Radar">Radar</option>
                        </select>
                    </div>
                </td>
            </tr>
        </table>
    </div>
</div>
@code{
    ChartSeriesType seriesType = ChartSeriesType.Polar;
    public void changeSeriesType(Microsoft.AspNetCore.Components.ChangeEventArgs args)
    {
        this.seriesType = (ChartSeriesType)Enum.Parse(typeof(ChartSeriesType), args.Value.ToString(), true);
    }
    public class PolarStackedAreaData
    {
        public string x { get; set; }
        public double y { get; set; }
        public double y1 { get; set; }
        public double y2 { get; set; }
        public double y3 { get; set; }
    }
    public List<PolarStackedAreaData> dataSource = new List<PolarStackedAreaData>
{
            new PolarStackedAreaData { x = "JPN", y= 5156, y1= 4849, y2= 4382, y3= 4939 },
            new PolarStackedAreaData { x= "DEU", y= 3754, y1= 3885, y2= 3365, y3= 3467 },
            new PolarStackedAreaData { x = "FRA", y = 2809, y1= 2844, y2= 2420, y3= 2463 },
            new PolarStackedAreaData { x = "GBR", y= 2721, y1= 3002, y2= 2863, y3= 2629 },
            new PolarStackedAreaData { x = "BRA", y= 2472, y1= 2456, y2= 1801, y3= 1799 },
            new PolarStackedAreaData { x = "RUS", y= 2231, y1= 2064, y2= 1366, y3= 1281 },
            new PolarStackedAreaData { x = "ITA", y= 2131, y1= 2155, y2= 1826, y3= 1851 },
            new PolarStackedAreaData { x = "IND", y= 1857, y1= 2034, y2= 2088, y3= 2256 },
            new PolarStackedAreaData { x = "CAN", y= 1843, y1= 1793, y2= 1553, y3= 1529 }
    };
}