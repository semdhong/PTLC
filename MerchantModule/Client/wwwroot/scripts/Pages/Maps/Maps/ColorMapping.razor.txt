@page "/Maps/ColorMapping"

@using Syncfusion.EJ2.Blazor.Maps
@using Syncfusion.EJ2.Blazor.DropDowns
@using Syncfusion.EJ2.Blazor.Buttons
@inherits SampleBaseComponent;

 <div class="col-lg-9 control-section sb-property-border">
        <EjsMaps>
            <MapsZoomSettings Enable="false"></MapsZoomSettings>
            <MapsTitleSettings Text="Spring Precipitation Averages of US States">
                <MapsTitleTextStyle Size="16px"></MapsTitleTextStyle>
            </MapsTitleSettings>
            <MapsLegendSettings Visible="true" Position="LegendPosition.Bottom" Height="10" Width="80%" Mode="LegendMode.Interactive">
                <MapsLegendTitle Text="@LegendText"></MapsLegendTitle>
                <MapsLegendTitleStyle Size="18px"></MapsLegendTitleStyle>
            </MapsLegendSettings>
            <MapsLayers>
                <MapsLayer ShapeData="@MapShapeData" ShapeDataPath="state" ShapePropertyPath='@("name")' DataSource="@ColorMappingData">
                    <MapsShapeSettings Fill="#E5E5E5" ColorValuePath="@ColorValuePath">
                        <MapsShapeBorder Width="0.2" Color="black"></MapsShapeBorder>
                        <MapsShapeColorMappings>
                            <MapsShapeColorMapping From="@colorMappingFromOne" MinOpacity="@minOpacity" MaxOpacity="maxOpacity" To="@colorMappingToOne" Color="@colorMappingColorOne" Label="@colorMappingLabelOne" Value="@colorMappingValueOne"></MapsShapeColorMapping>
                            <MapsShapeColorMapping From="@colorMappingFromTwo" To="@colorMappingToTwo" Color="@colorMappingColorTwo" Label="@colorMappingLabelTwo" Value="@colorMappingValueTwo"></MapsShapeColorMapping>
                            <MapsShapeColorMapping From="@colorMappingFromThree" To="@colorMappingToThree" Color="@colorMappingColorThree" Label="@colorMappingLabelThree" Value="@colorMappingValueThree"></MapsShapeColorMapping>
                            <MapsShapeColorMapping From="@colorMappingFromFour" To="@colorMappingToFour" Color="@colorMappingColorFour" Label="@colorMappingLabelFour" Value="@colorMappingValueFour"></MapsShapeColorMapping>
                            <MapsShapeColorMapping From="@colorMappingFromFive" To="@colorMappingToFive" Color="@colorMappingColorFive" Label="@colorMappingLabelFive" Value="@colorMappingValueFive"></MapsShapeColorMapping>
                            <MapsShapeColorMapping From="@colorMappingFromSix" To="@colorMappingToSix" Color="@colorMappingColorSix" Label="@colorMappingLabelSix" Value="@colorMappingValueSix"></MapsShapeColorMapping>
                        </MapsShapeColorMappings>
                    </MapsShapeSettings>
                    <MapsLayerTooltipSettings Visible="true" ValuePath="State" Format=" <b> ${state}</b> <br> Inches : ${inches} <br> Category : ${value}"></MapsLayerTooltipSettings>

                </MapsLayer>
            </MapsLayers>
        </EjsMaps>
    </div>
<div class="col-lg-3 property-section">
    &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br>
    <div class="property-panel-section">
        <div class="property-panel-header">Properties</div>
        <div class="property-panel-content">
            <table style="width:100%" title="Properties">
                <tbody>

                    <tr style="height: 35px">
                        <td style="width: 70%" class="property-text">
                            Color Mapping Type
                        </td>
                        <td style="width: 50%">
                            <EjsDropDownList Placeholder="Select colorMapping Type" DataSource="@ColorMappingType" Value="@ColorMappingTypeValue" Width="120px">
                                <DropDownListEvents TValue="string" ValueChange="ColorMappingValueTypeChange"></DropDownListEvents>
                                <DropDownListFieldSettings Text="Name" Value="Value"></DropDownListFieldSettings>
                            </EjsDropDownList>
                        </td>
                    </tr>
                    <tr style="height: 35px"></tr>
                    <tr style="height: 35px;width:70%;display:@display">
                        <td style="width: 90%" class="property-text">
                            Change Opacity
                        </td>
                        <td style="width: 50%">
                            <EjsCheckBox ValueChange="opacityChange" Checked="@opacityChecked" Disabled="@opacityDisabled"></EjsCheckBox>
                        </td>
                    </tr>
                    <tr style="height:60px">
                        <td>
                            <div style="display:@minDisplay">Min Opacity </div>
                        </td>
                        <td>
                            <div>
                                <input type="range" value="@minRange" min="0" max="1" step="0.1" @onchange="minRangeChange" style="display: @minDisplay" />
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <div style="display:@minDisplay">Max Opacity </div>
                        </td>
                        <td>
                            <div>
                                <input type="range" value="@maxRange" min="0" max="1" step="0.1" @onchange="maxRangeChange" style="display: @minDisplay" />
                            </div>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>

@code {
    public string ColorMappingTypeValue = "Range";
    public string LegendText = "Inches";
    public string minDisplay = "none";
    public double minOpacity = 0;
    public double maxOpacity = 0;
    public double minRange = 0.5;
    public string display = "none";
    public double maxRange = 1;
    public Boolean opacityDisabled = true;
    public Boolean opacityChecked;
    private void opacityChange(Syncfusion.EJ2.Blazor.Buttons.ChangeEventArgs args)
    {
        opacityChecked = args.Checked;
        if (opacityChecked == true)
        {
            opacityDisabled = false;
            minDisplay = "block";
        }
        else
        {
            opacityDisabled = true;
            minDisplay = "none";
        }
    }
    private void minRangeChange(Microsoft.AspNetCore.Components.ChangeEventArgs args)
    {
        minRange = Convert.ToDouble(args.Value);
        minOpacity = minRange;
    }
    private void maxRangeChange(Microsoft.AspNetCore.Components.ChangeEventArgs args)
    {
        maxRange = Convert.ToDouble(args.Value);
        maxOpacity = maxRange;
    }
    public class type
    {
        public string Value { get; set; }
        public string Name { get; set; }
    };
    public List<type> ColorMappingType = new List<type> {
        new type { Value="Range", Name="Range" },
        new type { Value="Equal", Name="Equal" },
        new type { Value="Desaturation", Name="Desaturation" }
    };
    public string ColorValuePath = "inches";
    public double? colorMappingFromOne = 0.1;
    public double? colorMappingToOne = 1;
    public string[] colorMappingColorOne = { "#DEEBAE" };
    public string colorMappingLabelOne = "0 - 1";
    public string colorMappingValueOne = null;

    public double? colorMappingFromTwo = 1;
    public double? colorMappingToTwo = 2;
    public string[] colorMappingColorTwo = { "#A4D6AD" };
    public string colorMappingLabelTwo = "1 - 2";
    public string colorMappingValueTwo = null;

    public double? colorMappingFromThree = 2;
    public double? colorMappingToThree = 3;
    public string[] colorMappingColorThree = { "#37AFAB" };
    public string colorMappingLabelThree = "2 - 3";
    public string colorMappingValueThree = null;

    public double? colorMappingFromFour = 3;
    public double? colorMappingToFour = 4;
    public string[] colorMappingColorFour = { "#547C84" };
    public string colorMappingLabelFour = "3 - 4";
    public string colorMappingValueFour = null;

    public double? colorMappingFromFive = 4;
    public double? colorMappingToFive = 5;
    public string[] colorMappingColorFive = { "#CEBF93" };
    public string colorMappingLabelFive = "4 - 5";
    public string colorMappingValueFive = null;

    public double? colorMappingFromSix = 5;
    public double? colorMappingToSix = 6;
    public string[] colorMappingColorSix = { "#a69d70" };
    public string colorMappingLabelSix = "5 - 6";
    public string colorMappingValueSix = null;

    public void ColorMappingValueTypeChange(Syncfusion.EJ2.Blazor.DropDowns.ChangeEventArgs<string> args)
    {
        ColorMappingTypeValue = args.Value;
        if (ColorMappingTypeValue == "Range")
        {
            minDisplay = "none";
            display = "none";
            opacityDisabled = true;
            opacityChecked = false;
            LegendText = "Inches";
            ColorValuePath = "inches";
            colorMappingFromOne = 0.1;
            colorMappingToOne = 1;
            colorMappingColorOne = new string[] { "#DEEBAE" };
            colorMappingLabelOne = "0 - 1";
            colorMappingValueOne = null;

            colorMappingFromTwo = 1;
            colorMappingToTwo = 2;
            colorMappingColorTwo = new string[] { "#A4D6AD" };
            colorMappingLabelTwo = "1 - 2";
            colorMappingValueTwo = null;

            colorMappingFromThree = 2;
            colorMappingToThree = 3;
            colorMappingColorThree = new string[] { "#37AFAB" };
            colorMappingLabelThree = "2 - 3";
            colorMappingValueThree = null;

            colorMappingFromFour = 3;
            colorMappingToFour = 4;
            colorMappingColorFour = new string[] { "#547C84" };
            colorMappingLabelFour = "3 - 4";
            colorMappingValueFour = null;

            colorMappingFromFive = 4;
            colorMappingToFive = 5;
            colorMappingColorFive = new string[] { "#CEBF93" };
            colorMappingLabelFive = "4 - 5";
            colorMappingValueFive = null;

            colorMappingFromSix = 5;
            colorMappingToSix = 6;
            colorMappingColorSix = new string[] { "#a69d70" };
            colorMappingLabelSix = "5 - 6";
            colorMappingValueSix = null;
        }
        else if (ColorMappingTypeValue == "Equal")
        {
            minDisplay = "none";
            display = "none";
            opacityDisabled = true;
            opacityChecked = false;
            LegendText = "Category";
            ColorValuePath = "value";
            colorMappingFromOne = null;
            colorMappingToOne = null;
            colorMappingColorOne = new string[] { "#DEEBAE" };
            colorMappingLabelOne = null;
            colorMappingValueOne = "Low";

            colorMappingFromTwo = null;
            colorMappingToTwo = null;
            colorMappingColorTwo = new string[] { "#A4D6AD" };
            colorMappingLabelTwo = null;
            colorMappingValueTwo = "Moderate";

            colorMappingFromThree = null;
            colorMappingToThree = null;
            colorMappingColorThree = new string[] { "#37AFAB" };
            colorMappingLabelThree = null;
            colorMappingValueThree = "High";

            colorMappingFromFour = null;
            colorMappingToFour = null;
            colorMappingColorFour = null;
            colorMappingLabelFour = null;
            colorMappingValueFour = null;

            colorMappingFromFive = null;
            colorMappingToFive = null;
            colorMappingColorFive = null;
            colorMappingLabelFive = null;
            colorMappingValueFive = null;

            colorMappingFromSix = null;
            colorMappingToSix = null;
            colorMappingColorSix = null;
            colorMappingLabelSix = null;
            colorMappingValueSix = null;
        }
        else
        {
            display = "block";
            opacityDisabled = false;
            LegendText = "Inches";
            ColorValuePath = "inches";
            colorMappingFromOne = 0.1;
            colorMappingToOne = 6;
            colorMappingColorOne = new string[] { "#F0D6AD", "#19547B" };
            colorMappingLabelOne = null;
            colorMappingValueOne = null;

            colorMappingFromTwo = null;
            colorMappingToTwo = null;
            colorMappingColorTwo = null;
            colorMappingLabelTwo = null;
            colorMappingValueTwo = null;

            colorMappingFromThree = null;
            colorMappingToThree = null;
            colorMappingColorThree = null;
            colorMappingLabelThree = null;
            colorMappingValueThree = null;

            colorMappingFromFour = null;
            colorMappingToFour = null;
            colorMappingColorFour = null;
            colorMappingLabelFour = null;
            colorMappingValueFour = null;

            colorMappingFromFive = null;
            colorMappingToFive = null;
            colorMappingColorFive = null;
            colorMappingLabelFive = null;
            colorMappingValueFive = null;

            colorMappingFromSix = null;
            colorMappingToSix = null;
            colorMappingColorSix = null;
            colorMappingLabelSix = null;
            colorMappingValueSix = null;
        }
    }

    public MapDataSettings MapShapeData = new MapDataSettings
    {
        async = true,
        dataOptions = "scripts/MapsData/usa.json",
        type = "GET"
    };

    public class MapDataSettings
    {
        public Boolean async { get; set; }
        public String dataOptions { get; set; }
        public String type { get; set; }
    };
    public class ColorMappingDatasource
    {
        public string state;
        public double inches;
        public string value;
    }
    public List<ColorMappingDatasource> ColorMappingData = new List<ColorMappingDatasource> {
        new ColorMappingDatasource {state= "Alabama",inches= 5.37, value= "High" },
        new ColorMappingDatasource {state= "Alaska", inches=1.15, value= "Low" },
        new ColorMappingDatasource {state= "Arizona", inches=0.77, value= "Low" },
        new ColorMappingDatasource {state= "Arkansas", inches=4.99, value= "High" },
        new ColorMappingDatasource {state= "California", inches=1.93, value= "Low" },
        new ColorMappingDatasource {state= "Colorado", inches=1.56, value= "Low" },
        new ColorMappingDatasource {state= "Connecticut", inches=4.35, value= "Moderate" },
        new ColorMappingDatasource {state= "Delaware", inches=4.01, value= "High" },
        new ColorMappingDatasource {state= "Florida", inches=3.63, value= "Moderate" },
        new ColorMappingDatasource {state= "Georgia", inches=4.16, value= "High" },
        new ColorMappingDatasource {state= "Hawaii", inches=5.94, value= "High" },
        new ColorMappingDatasource {state= "Idaho", inches=1.75, value= "Low" },
        new ColorMappingDatasource {state= "Illinois", inches=3.79, value= "Moderate" },
        new ColorMappingDatasource {state= "Indiana", inches=3.94, value= "Moderate" },
        new ColorMappingDatasource {state= "Iowa", inches=3.25, value= "Moderate" },
        new ColorMappingDatasource {state= "Kansas", inches=3.00, value= "Moderate" },
        new ColorMappingDatasource {state= "Kentucky", inches=4.61, value= "High" },
        new ColorMappingDatasource {state= "Louisiana", inches=5.22, value= "High" },
        new ColorMappingDatasource {state= "Maine", inches=3.49, value= "Moderate" },
        new ColorMappingDatasource {state= "Maryland", inches=3.93, value= "Moderate" },
        new ColorMappingDatasource {state= "Massachusetts", inches=4.06, value= "High" },
        new ColorMappingDatasource {state= "Michigan", inches=2.62, value= "Moderate" },
        new ColorMappingDatasource {state= "Minnesota", inches=2.19, value= "Moderate" },
        new ColorMappingDatasource {state= "Mississippi", inches=5.77, value= "High" },
        new ColorMappingDatasource {state= "Missouri", inches=4.12, value= "High" },
        new ColorMappingDatasource {state= "Montana",inches=1.51, value= "Low" },
        new ColorMappingDatasource {state= "Nebraska",inches=2.60, value= "Moderate" },
        new ColorMappingDatasource {state= "Nevada",inches=0.96, value= "Low" },
        new ColorMappingDatasource {state= "New Hampshire",inches=3.54, value= "Moderate" },
        new ColorMappingDatasource {state= "New Jersey",inches=4.13, value= "High" },
        new ColorMappingDatasource {state= "New Mexico",inches=0.82, value= "Low" },
        new ColorMappingDatasource {state= "New York",inches=3.41, value= "Moderate" },
        new ColorMappingDatasource {state= "North Carolina",inches=4.14, value= "High" },
        new ColorMappingDatasource {state= "North Dakota",inches=1.50, value= "Low" },
        new ColorMappingDatasource {state= "Ohio",inches=3.53, value= "Moderate" },
        new ColorMappingDatasource {state= "Oklahoma",inches=3.84, value= "Moderate" },
        new ColorMappingDatasource {state= "Oregon",inches=2.33, value= "Moderate" },
        new ColorMappingDatasource {state= "Pennsylvania",inches=3.67, value= "Moderate" },
        new ColorMappingDatasource {state= "Rhode Island",inches=4.23, value= "High" },
        new ColorMappingDatasource {state= "South Carolina",inches=3.83, value= "Moderate" },
        new ColorMappingDatasource {state= "South Dakota",inches=2.17, value= "Moderate" },
        new ColorMappingDatasource {state= "Tennessee",inches=5.15, value= "High" },
        new ColorMappingDatasource {state= "Texas",inches=2.50, value= "Moderate" },
        new ColorMappingDatasource {state= "Utah",inches=1.16, value= "Low" },
        new ColorMappingDatasource {state= "Vermont",inches=3.40, value= "Moderate" },
        new ColorMappingDatasource {state= "Virginia",inches=3.91, value= "Moderate" },
        new ColorMappingDatasource {state= "Washington",inches=2.90, value= "Moderate" },
        new ColorMappingDatasource {state= "West Virginia",inches=4.06, value= "High" },
        new ColorMappingDatasource {state= "Wisconsin",inches=2.73, value= "Moderate" },
        new ColorMappingDatasource {state= "Wyoming",inches=1.42, value= "Low" }
    };
} 