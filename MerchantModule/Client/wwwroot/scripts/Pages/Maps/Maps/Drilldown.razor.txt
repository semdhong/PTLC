@page "/Maps/Drilldown"

@using Syncfusion.EJ2.Blazor.Maps
@using Syncfusion.EJ2.Blazor.Inputs
@using Syncfusion.EJ2.Blazor.Buttons

@inherits SampleBaseComponent;

    <div id="button" style="font-size:14px;margin-left: 10px;margin-top: 20px;display:@button;left:50px;top:50px;">
        <button id="category" style="visibility:@category; display:inline-block" @onclick="world">
            World Map
        </button>
        <p style="visibility:@symbol; display:inline-block" id="symbol">&nbsp;&gt;&gt;&nbsp;</p>
        <p id="text" style="display:inline-block;">@text</p>
    </div>
    <div class="control-section">
        <EjsMaps @ref="@maps" BaseLayerIndex="@LayerIndex">
            <MapsEvents ShapeSelected="shape"></MapsEvents>
            <MapsZoomSettings Enable="false"></MapsZoomSettings>
            <MapsLayers>
                <MapsLayer ShapeData="@WorldMap" LayerType="ShapeLayerType.Geometry" ShapePropertyPath='@("continent")' ShapeDataPath="continent" DataSource="@DataSource">
                    <MapsShapeSettings ColorValuePath="drillColor">
                    </MapsShapeSettings>
                    @*<MapsMarkerSettings>
                            <MapsMarker Visible="true" DataSource="@AsiaMarker" AnimationDuration="0">
                                <MarkerTemplate>
                                    @{
                                        var data = context as IDataTemplate;
                                        <div id="marker1" class="markerTemplate">Asia</div>
                                    }
                                </MarkerTemplate>
                            </MapsMarker>
                            <MapsMarker Visible="true" DataSource="@AustraliaMarker" AnimationDuration="0">
                                <MarkerTemplate>
                                    @{
                                        var data = context as IDataTemplate;
                                        <div id="marker1" class="markerTemplate">@data.Name</div>
                                    }
                                </MarkerTemplate>
                            </MapsMarker>
                            <MapsMarker Visible="true" DataSource="@AfricaMarker" AnimationDuration="0">
                                <MarkerTemplate>
                                    @{
                                        var data = context as IDataTemplate;
                                        <div id="marker2" class="markerTemplate">@data.Name</div>
                                    }
                                </MarkerTemplate>
                            </MapsMarker>
                            <MapsMarker Visible="true" DataSource="@EuropeMarker" AnimationDuration="0">
                                <MarkerTemplate>
                                    @{
                                        var data = context as IDataTemplate;
                                        <div id="marker1" class="markerTemplate">@data.Name</div>
                                    }
                                </MarkerTemplate>
                            </MapsMarker>
                            <MapsMarker Visible="true" DataSource="@NothAmerica" AnimationDuration="0">
                                <MarkerTemplate>
                                    @{
                                        var data = context as IDataTemplate;
                                        <div id="marker1" class="markerTemplate">@data.Name</div>
                                    }
                                </MarkerTemplate>
                            </MapsMarker>
                            <MapsMarker Visible="true" DataSource="@SouthAmericaMarker" AnimationDuration="0">
                                <MarkerTemplate>
                                    @{
                                        var data = context as IDataTemplate;
                                        <div id="marker1" class="markerTemplate">@data.Name</div>
                                    }
                                </MarkerTemplate>
                            </MapsMarker>
                        </MapsMarkerSettings>*@
                    <MapsLayerTooltipSettings Visible="true" ValuePath="continent"></MapsLayerTooltipSettings>
                </MapsLayer>
                <MapsLayer ShapeData="@Africa" LayerType="ShapeLayerType.Geometry">
                    <MapsShapeSettings Fill="#80306A"></MapsShapeSettings>
                    <MapsLayerTooltipSettings Visible="true" ValuePath="name"></MapsLayerTooltipSettings>
                </MapsLayer>
                <MapsLayer ShapeData="@Asia" LayerType="ShapeLayerType.Geometry">
                    <MapsShapeSettings Fill="#462A6D"></MapsShapeSettings>
                    <MapsLayerTooltipSettings Visible="true" ValuePath="name"></MapsLayerTooltipSettings>
                </MapsLayer>
                <MapsLayer ShapeData="@NorthAmerica" LayerType="ShapeLayerType.Geometry">
                    <MapsShapeSettings Fill="#C13664"></MapsShapeSettings>
                    <MapsLayerTooltipSettings Visible="true" ValuePath="name"></MapsLayerTooltipSettings>
                </MapsLayer>
                <MapsLayer ShapeData="@SouthAmerica" LayerType="ShapeLayerType.Geometry">
                    <MapsShapeSettings Fill="#9C3367"></MapsShapeSettings>
                    <MapsLayerTooltipSettings Visible="true" ValuePath="name"></MapsLayerTooltipSettings>
                </MapsLayer>
                <MapsLayer ShapeData="@Oceania" LayerType="ShapeLayerType.Geometry">
                    <MapsShapeSettings Fill="#2A2870"></MapsShapeSettings>
                    <MapsLayerTooltipSettings Visible="true" ValuePath="name"></MapsLayerTooltipSettings>
                </MapsLayer>
                <MapsLayer ShapeData="@Australia" LayerType="ShapeLayerType.Geometry">
                    <MapsShapeSettings Fill="#2A2870"></MapsShapeSettings>
                    <MapsLayerTooltipSettings Visible="true" ValuePath="name"></MapsLayerTooltipSettings>
                </MapsLayer>
            </MapsLayers>
        </EjsMaps>
    </div>
    <div align="center">
        <p>
            <i>
                <div align="center">
        <p style="font-size: 16px;color:grey">@drill</p>
    </div>
    </i>
    </p>
</div>

<style>
    #category {
        background-color: white; /* Green */
        border: none;
        color: black;
        padding: 1px 2px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 16px;
    }

    .backLabel:hover {
        cursor: pointer;
    }

    .markerTemplate {
        height: 30px;
        width: 30px;
        display: block;
        margin: auto;
    }

    #category:hover {
        cursor: pointer;
    }

    .markerTemplate {
        font-size: 12px;
        color: white;
        text-shadow: 0px 1px 1px black;
        font-weight: 500
    }
</style>
@code {
    public string category = "hidden";
    public string symbol = "hidden";
    public string button = "none";
    public string text = "";
    public string drill = "Click on a shape to drill";
    EjsMaps maps;
    public double LayerIndex = 0;
    public MapDataSettings WorldMap = new MapDataSettings
    {
        async = true,
        dataOptions = "scripts/MapsData/WorldMap.json",
        type = "GET"
    };
    public MapDataSettings Africa = new MapDataSettings
    {
        async = true,
        dataOptions = "scripts/MapsData/africa.json",
        type = "GET"
    };
    public MapDataSettings Europe = new MapDataSettings
    {
        async = true,
        dataOptions = "scripts/MapsData/europe.json",
        type = "GET"
    };
    public MapDataSettings Asia = new MapDataSettings
    {
        async = true,
        dataOptions = "scripts/MapsData/asia.json",
        type = "GET"
    };
    public MapDataSettings NorthAmerica = new MapDataSettings
    {
        async = true,
        dataOptions = "scripts/MapsData/northamerica.json",
        type = "GET"
    };
    public MapDataSettings SouthAmerica = new MapDataSettings
    {
        async = true,
        dataOptions = "scripts/MapsData/southamerica.json",
        type = "GET"
    };
    public MapDataSettings Oceania = new MapDataSettings
    {
        async = true,
        dataOptions = "scripts/MapsData/oceania.json",
        type = "GET"
    };
    public MapDataSettings Australia = new MapDataSettings
    {
        async = true,
        dataOptions = "scripts/MapsData/australia.json",
        type = "GET"
    };
    //IDataTemplate marker = new IDataTemplate();
    public class MapDataSettings
    {
        public Boolean async { get; set; }
        public String dataOptions { get; set; }
        public String type { get; set; }
    };
    public class MapDataSource
    {
        public string drillColor;
        public string continent;
        public string CategoryName;
        public double Sales;
        public string color;
    };
    public List<MapDataSource> DataSource = new List<MapDataSource>{
            new MapDataSource {
                drillColor= "#C13664",
                continent= "North America",
                CategoryName= "Books",
                Sales= 10882,
                color= "#71B081"
            },
            new MapDataSource {
                drillColor= "#9C3367",
                continent= "South America",
                CategoryName= "Books",
                Sales= 13776,
                color= "#5A9A77"
            },
            new MapDataSource {
                drillColor= "#80306A",
                continent= "Africa",
                CategoryName= "Books",
                Sales= 18718.0,
                color= "#498770"
            },
            new MapDataSource {
                drillColor= "#622D6C",
                continent= "Europe",
                CategoryName= "Books",
                Sales= 3746,
                color= "#39776C"
            },
            new MapDataSource {
                drillColor= "#462A6D",
                continent= "Asia",
                CategoryName= "Books",
                Sales= 10688,
                color= "#266665"
            },
            new MapDataSource {
                drillColor= "#2A2870",
                continent= "Australia",
                CategoryName= "Books",
                Sales= 30716,
                color= "#124F5E"
            }
    };
    public class MarkerDataSource
    {
        public double latitude;
        public double longitude;
        public string name;
    };
    public List<MarkerDataSource> AsiaMarker = new List<MarkerDataSource> {
            new MarkerDataSource {latitude= 50.32087157990324, longitude= 90.015625, name= "Asia" }
     };
    public List<MarkerDataSource> AustraliaMarker = new List<MarkerDataSource> {
            new MarkerDataSource {latitude= -28.88583769986199, longitude= 130.296875, name= "Australia" }
     };
    public List<MarkerDataSource> AfricaMarker = new List<MarkerDataSource> {
            new MarkerDataSource {latitude= 10.97274101999902, longitude= 16.390625, name= "Africa" }
     };
    public List<MarkerDataSource> EuropeMarker = new List<MarkerDataSource> {
            new MarkerDataSource {latitude= 47.95121990866204, longitude= 18.468749999999998, name= "Europe" }
     };
    public List<MarkerDataSource> NothAmerica = new List<MarkerDataSource> {
            new MarkerDataSource {latitude= 59.88893689676585, longitude= -109.3359375, name= "North America" }
     };
    public List<MarkerDataSource> SouthAmericaMarker = new List<MarkerDataSource> {
            new MarkerDataSource {latitude= -6.64607562172573, longitude= -55.54687499999999, name= "South America" }
     };

    void shape(Syncfusion.EJ2.Blazor.Maps.IShapeSelectedEventArgs args)
    {
        Dictionary<string, string> data = Newtonsoft.Json.JsonConvert.DeserializeObject<Dictionary<string, string>>(args.Data.ToString());
        if (maps.BaseLayerIndex == 0)
        {
            if (data["continent"] == "Africa")
            {
                LayerIndex = 1;
                this.StateHasChanged();

            }
            else if (data["continent"] == "Asia")
            {
                LayerIndex = 2;
                this.StateHasChanged();
            }
            else if (data["continent"] == "North America")
            {
                LayerIndex = 3;
                this.StateHasChanged();
            }
            else if (data["continent"] == "South America")
            {
                LayerIndex = 4;
                this.StateHasChanged();
            }
            else if (data["continent"] == "Oceania")
            {
                LayerIndex = 5;
                this.StateHasChanged();
            }
            else if (data["continent"] == "Australia")
            {
                LayerIndex = 6;
                this.StateHasChanged();
            }
            button = "block";
            category = "visible";
            text = data["continent"];
            symbol = "visible";
            drill = "";
        }
    }

    public void world()
    {
        LayerIndex = 0;
        this.StateHasChanged();
        category = "hidden";
        symbol = "hidden";
        text = "";
        drill = "Click on a shape to drill";
    }

}
