@page "/Maps/MapsWithSlider"

@using Syncfusion.EJ2.Blazor.Maps
@using Syncfusion.EJ2.Blazor.Inputs
@using Syncfusion.EJ2.Blazor.Buttons

@inherits SampleBaseComponent;

<div class="control-section">
    <EjsMaps Height="400">
        <MapsMargin Bottom="20"></MapsMargin>
        <MapsZoomSettings Enable="false"></MapsZoomSettings>
        <MapsTitleSettings Text="Average annual population growth in North American countries">
            <MapsTitleTextStyle Size="16px"></MapsTitleTextStyle>
        </MapsTitleSettings>
        <MapsAnnotations>
            <MapsAnnotation HorizontalAlignment="AnnotationAlignment.Center" Y="93%">
                <ContentTemplate>
                    <div style="height:70px;width:250px; margin-left: -50px">
                        <div style="width: 60%;">
                            <div>
                                <input type="range" value="@sliderPointerValue" min="-1.5" max="3.75" step="0.75" @onchange="rangeStartChange" style="width:250px; height: 48px" />
                            </div>
                        </div>
                    </div>
                </ContentTemplate>
            </MapsAnnotation>
        </MapsAnnotations>
        <MapsLayers>
            <MapsLayer ShapeData="@NorthAmerica" ShapePropertyPath='@("name")' ShapeDataPath="name" DataSource="@PopulationGrowth">
                <MapsShapeBorder Width="1" Color="black"></MapsShapeBorder>
                <MapsShapeSettings ColorValuePath="population">
                    <MapsShapeColorMappings>
                        <MapsShapeColorMapping From="-1.5" To="-0.75" Color='@colorMappingColorOne'></MapsShapeColorMapping>
                        <MapsShapeColorMapping From="-0.75" To="0.1" Color='@colorMappingColorTwo'></MapsShapeColorMapping>
                        <MapsShapeColorMapping From="0.2" To="0.75" Color='@colorMappingColorThree'></MapsShapeColorMapping>
                        <MapsShapeColorMapping From="0.76" To="1.5" Color='@colorMappingColorFour'></MapsShapeColorMapping>
                        <MapsShapeColorMapping From="1.5" To="2.25" Color='@colorMappingColorFive'></MapsShapeColorMapping>
                        <MapsShapeColorMapping From="2.25" To="3" Color='@colorMappingColorSix'></MapsShapeColorMapping>
                        <MapsShapeColorMapping From="3" To="3.75" Color='@colorMappingColorSeven'></MapsShapeColorMapping>
                    </MapsShapeColorMappings>
                </MapsShapeSettings>
                <MapsLayerTooltipSettings Visible="true" Format="${name} : ${population}%"></MapsLayerTooltipSettings>
            </MapsLayer>
        </MapsLayers>
    </EjsMaps>
</div>

@code {
    public string[] colorMappingColorOne = { "#7E9CDC" };
    public string[] colorMappingColorTwo = { "#DCD57E" };
    public string[] colorMappingColorThree = { "#7EDCA2" };
    public string[] colorMappingColorFour = { "#6EB5D0" };
    public string[] colorMappingColorFive = { "#A6DC7E" };
    public string[] colorMappingColorSix = { "#DCA87E" };
    public string[] colorMappingColorSeven = { "#d075c6" };
    public double sliderPointerValue = 3;
    public Boolean opacityChecked;
    public double minRange;
    private void rangeStartChange(Microsoft.AspNetCore.Components.ChangeEventArgs args)
    {
        minRange = Convert.ToDouble(args.Value);
        if (minRange >= -1.5 && minRange <= -0.75)
        {
            colorSet("#E5E5E5", "#E5E5E5", "#E5E5E5", "#E5E5E5", "#E5E5E5", "#E5E5E5", "#E5E5E5");
        }
        if (minRange >= -0.75 && minRange <= 0)
        {
            colorSet("#7E9CDC", "#E5E5E5", "#E5E5E5", "#E5E5E5", "#E5E5E5", "#E5E5E5", "#E5E5E5");
        }
        if (minRange >= 0 && minRange <= 0.75)
        {
            colorSet("#7E9CDC", "#DCD57E", "#E5E5E5", "#E5E5E5", "#E5E5E5", "#E5E5E5", "#E5E5E5");
        }
        if (minRange >= 0.75 && minRange <= 1.5)
        {
            colorSet("#7E9CDC", "#DCD57E", "#7EDCA2", "#E5E5E5", "#E5E5E5", "#E5E5E5", "#E5E5E5");
        }
        if (minRange >= 1.5 && minRange <= 2.25)
        {
            colorSet("#7E9CDC", "#DCD57E", "#7EDCA2", "#6EB5D0", "#E5E5E5", "#E5E5E5", "#E5E5E5");
        }
        if (minRange >= 2.25 && minRange <= 3)
        {
            colorSet("#7E9CDC", "#DCD57E", "#7EDCA2", "#6EB5D0", "#A6DC7E", "#E5E5E5", "#E5E5E5");
        }
        if (minRange >= 3 && minRange <= 3.75)
        {
            colorSet("#7E9CDC", "#DCD57E", "#7EDCA2", "#6EB5D0", "#A6DC7E", "#DCA87E", "#E5E5E5");
        }
        if (minRange >= 3.75)
        {
            colorSet("#7E9CDC", "#DCD57E", "#7EDCA2", "#6EB5D0", "#A6DC7E", "#DCA87E", "#d075c6");
        }

    }

    private void colorSet(string color1, string color2, string color3, string color4, string color5, string color6, string color7)
    {
        colorMappingColorOne = new string[] { color1 };
        colorMappingColorTwo = new string[] { color2 };
        colorMappingColorThree = new string[] { color3 };
        colorMappingColorFour = new string[] { color4 };
        colorMappingColorFive = new string[] { color5 };
        colorMappingColorSix = new string[] { color6 };
        colorMappingColorSeven = new string[] { color7 };
    }
    public MapDataSettings NorthAmerica = new MapDataSettings
    {
        async = true,
        dataOptions = "scripts/MapsData/northamerica.json",
        type = "GET"
    };

    public class MapDataSettings
    {
        public Boolean async { get; set; }
        public String dataOptions { get; set; }
        public String type { get; set; }
    };
    public class Growth
    {
        public string name;
        public double population;
    };
    public List<Growth> PopulationGrowth = new List<Growth> {
                new Growth { name= "United States", population= 0.75},
                new Growth { name= "Mexico", population= 1.8},
                new Growth { name= "Canada", population= 0.79},
                new Growth { name= "Guatemala", population= 2.93},
                new Growth { name= "Cuba", population= 0.25},
                new Growth { name= "Haiti", population= 2.31},
                new Growth { name= "Dominican Rep.", population= 0.98},
                new Growth { name= "Honduras", population= 2.29},
                new Growth { name= "El Salvador", population= 0.92},
                new Growth { name= "Nicaragua", population= 2.37},
                new Growth { name= "Costa Rica", population= 1.63},
                new Growth { name= "Panama", population= 1.37},
                new Growth { name= "Puerto Rico", population= -1.13},
                new Growth { name= "Jamaica", population= 0.26},
                new Growth { name= "Trinidad and Tobago", population= 0.52},
                new Growth { name= "Bahamas", population= 1.34},
                new Growth { name= "Belize", population= 2.50},
                new Growth { name= "Barbados", population= 0.35},
                new Growth { name= "Saint Lucia", population= 0.58},
                new Growth { name= "Saint Vincent and the Grenadines", population= 0.1},
                new Growth { name= "U.S. Virgin Is.", population= 0.1},
                new Growth { name= "Grenada", population= 0.1},
                new Growth { name= "Antigua and Barbuda", population= 1.14},
                new Growth { name= "Dominica", population= 0.1},
                new Growth { name= "Bermuda", population= 0.1},
                new Growth { name= "Cayman Is.", population= 3.51},
                new Growth { name= "Greenland", population= 0.1},
                new Growth { name= "St. Kitts and Nevis", population= 0.1},
                new Growth { name= "Sint Maarten", population= 2.63},
                new Growth { name= "British Virgin Is.", population= 3.33},
                new Growth { name= "Anguilla", population= 0.1},
                new Growth { name= "St-Barth√©lemy", population= 0.1},
                new Growth { name= "St. Pierre and Miquelon", population= 0.1},
                new Growth { name= "Montserrat", population= 0.1}
            };

}
<style>
    .content-wrapper {
        width: 52%;
        margin: 0 auto;
        min-width: 185px;
    }

    .sliderwrap {
        margin-top: 45px;
    }

    .e-bigger .content-wrapper {
        width: 80%;
    }

    .sliderwrap label {
        padding-bottom: 50px;
        font-size: 13px;
        font-weight: 500;
        margin-top: 15px;
    }

    .userselect {
        -webkit-user-select: none; /* Safari 3.1+ */
        -moz-user-select: none; /* Firefox 2+ */
        -ms-user-select: none; /* IE 10+ */
        user-select: none; /* Standard syntax */
    }
</style>