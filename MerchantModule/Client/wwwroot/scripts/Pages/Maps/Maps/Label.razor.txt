@page "/Maps/Label"

@using Syncfusion.EJ2.Blazor.Maps
@using Syncfusion.EJ2.Blazor.DropDowns
@using Syncfusion.EJ2.Blazor.Buttons

@inherits SampleBaseComponent;

<div class="col-lg-9 control-section sb-property-border">
    <div class="control-section">
        <EjsMaps>
            <MapsZoomSettings Enable="false"></MapsZoomSettings>
            <MapsLayers>
                <MapsLayer ShapeData="@USA">
                    <MapsDataLabelSettings Visible="@datalabelvisible" LabelPath="name" SmartLabelMode="@datalabelsmartlabelmode" IntersectionAction="@datalabelintersectaction"></MapsDataLabelSettings>
                    <MapsShapeSettings Autofill="true"></MapsShapeSettings>
                    <MapsLayerTooltipSettings Visible="true" ValuePath="name"></MapsLayerTooltipSettings>
                </MapsLayer>
            </MapsLayers>
        </EjsMaps>
    </div>
</div>
<div class="col-lg-3 property-section">
    &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br>
    <div class="property-panel-section">
        <div class="property-panel-header">Properties</div>
        <div class="property-panel-content">
            <table style="width:100%" title="Properties">
                <tbody>
                    <tr style="height: 35px">
                        <td style="width: 70%" class="property-text">
                            Show Labels
                        </td>
                        <td style="width: 50%">
                            <EjsCheckBox Checked="@checkboxvalue" ValueChange="showlabel"></EjsCheckBox>
                        </td>
                    </tr>
                    <tr style="height: 35px">
                        <td style="width: 70%" class="property-text">
                            Smart label mode
                        </td>
                        <td style="width: 50%">
                            <EjsDropDownList Placeholder="Select smartlabel mode" DataSource="@SmartLabelModeData" Value="@SmartLabelModeValue" Width="120px">
                                <DropDownListEvents TValue="string" ValueChange="smartlabelvaluechange"></DropDownListEvents>
                                <DropDownListFieldSettings text="Name" value="Value"></DropDownListFieldSettings>
                            </EjsDropDownList>
                        </td>
                    </tr>
                    <tr style="height: 35px">
                        <td style="width: 70%" class="property-text">
                            Intersect action
                        </td>
                        <td style="width: 50%">
                            <EjsDropDownList Placeholder="Select intersect action" DataSource="@IntersectactionData" Value="@IntersectactionDataValue" Width="120px">
                                <DropDownListEvents TValue="string" ValueChange="intersectactionvaluechange"></DropDownListEvents>
                                <DropDownListFieldSettings Text="Name" value="Value"></DropDownListFieldSettings>
                            </EjsDropDownList>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>

@code {
    public bool datalabelvisible = true;
    public bool checkboxvalue = true;
    public SmartLabelMode datalabelsmartlabelmode = SmartLabelMode.Trim;
    public IntersectAction datalabelintersectaction = IntersectAction.None;
    public string SmartLabelModeValue = "Trim";
    public string IntersectactionDataValue = "None";
    public class IntersectValues
    {
        public string Value { get; set; }
        public string Name { get; set; }
    };
    public List<IntersectValues> IntersectactionData = new List<IntersectValues> {
        new IntersectValues { Value="None", Name="None" },
        new IntersectValues { Value="Trim", Name="Trim" },
        new IntersectValues { Value="Hide", Name="Hide" }
    };
    public class SmartValues
    {
        public string Value { get; set; }
        public string Name { get; set; }
    };
    public List<SmartValues> SmartLabelModeData = new List<SmartValues> {
        new SmartValues { Value="Trim", Name="Trim" },
        new SmartValues { Value="None", Name="None" },
        new SmartValues { Value="Hide", Name="Hide" }
    };
    public class MapDataSettings
    {
        public Boolean async { get; set; }
        public String dataOptions { get; set; }
        public String type { get; set; }
    }
    public MapDataSettings USA = new MapDataSettings
    {
        async = true,
        dataOptions = "scripts/MapsData/usa.json",
        type = "GET"
    };
    public void showlabel(Syncfusion.EJ2.Blazor.Buttons.ChangeEventArgs args)
    {
        checkboxvalue = args.Checked;
        datalabelvisible = args.Checked;
    }
    public void smartlabelvaluechange(Syncfusion.EJ2.Blazor.DropDowns.ChangeEventArgs<string> args)
    {
        SmartLabelModeValue = args.Value;
        if (args.Value == "None")
        {
            datalabelsmartlabelmode = SmartLabelMode.None;
        }
        else if (args.Value == "Hide")
        {
            datalabelsmartlabelmode = SmartLabelMode.Hide;
        }
        else
        {
            datalabelsmartlabelmode = SmartLabelMode.Trim;
        }
    }
    public void intersectactionvaluechange(Syncfusion.EJ2.Blazor.DropDowns.ChangeEventArgs<string> args)
    {
        IntersectactionDataValue = args.Value;
        if (args.Value == "Trim")
        {
            datalabelintersectaction = IntersectAction.Trim;
        }
        else if (args.Value == "Hide")
        {
            datalabelintersectaction = IntersectAction.Hide;
        }
        else
        {
            datalabelintersectaction = IntersectAction.None;
        }
    }
}