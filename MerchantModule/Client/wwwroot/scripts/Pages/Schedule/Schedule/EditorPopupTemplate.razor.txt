@page "/Schedule/EditorPopupTemplate"

@using Syncfusion.EJ2.Blazor.Schedule
@using Syncfusion.EJ2.Blazor.Calendars
@using Syncfusion.EJ2.Blazor.DropDowns
@using Syncfusion.EJ2.Blazor.Inputs
@using ej2_blazor_samples
@inherits SampleBaseComponent;

<div class="control-section">
    <div class="content-wrapper">
        <EjsSchedule TValue="ScheduleData.DoctorsEventData" Width="100%" Height="650px" SelectedDate="@(new DateTime(2018, 2, 15))">
            <ScheduleTemplates>
                <EditorTemplate>
                    <table class="custom-event-editor" width="100%" cellpadding="5">
                        <tbody>
                            <tr>
                                <td class="e-textlabel">Summary</td>
                                <td colspan="4">
                                    <EjsTextBox Id="Subject" CssClass="e-field e-input" Value="@((context as ScheduleData.DoctorsEventData).Subject)"></EjsTextBox>
                                </td>
                            </tr>
                            <tr>
                                <td class="e-textlabel">Status</td>
                                <td colspan="4">
                                    <EjsDropDownList TValue="string" TItem="EventFields" ID="EventType" DataSource="@StatusData" placeholder="Choose status" CssClass="e-field" Value="@((context as ScheduleData.DoctorsEventData).EventType)" HtmlAttributes="@EventType">
                                        <DropDownListFieldSettings Value="id"></DropDownListFieldSettings>
                                    </EjsDropDownList>
                                </td>
                            </tr>
                            <tr>
                                <td class="e-textlabel">From</td>
                                <td colspan="4">
                                    <EjsDateTimePicker ID="StartTime" HtmlAttributes="@StartName" CssClass="e-field" Value="@((context as ScheduleData.DoctorsEventData).StartTime)"></EjsDateTimePicker>
                                </td>
                            </tr>
                            <tr>
                                <td class="e-textlabel">To</td>
                                <td colspan="4">
                                    <EjsDateTimePicker ID="EndTime" HtmlAttributes="@EndName" CssClass="e-field" Value="@((context as ScheduleData.DoctorsEventData).EndTime)"></EjsDateTimePicker>

                                </td>
                            </tr>
                            <tr>
                                <td class="e-textlabel">Reason</td>
                                <td colspan="4">
                                    <textarea id="Description" class="e-field e-input" name="Description" rows="3" cols="50" value="@((context as ScheduleData.DoctorsEventData).Description)"
                                              style="width: 100%; height: 60px !important; resize: vertical"></textarea>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </EditorTemplate>
            </ScheduleTemplates>
            <ScheduleEventSettings TValue="ScheduleData.DoctorsEventData" DataSource="@DataSource">
            </ScheduleEventSettings>
        </EjsSchedule>
    </div>
</div>
@code{
    public class EventFields
    {
        public string id { get; set; }
        public string text { get; set; }
    }
    List<EventFields> StatusData = new List<EventFields>() {
            new EventFields(){ id= "New", text= "New" },
            new EventFields(){ id= "Requested", text= "Requested" },
            new EventFields(){ id= "Confirmed", text= "Confirmed" },
        };
    Dictionary<string, object> StartName = new Dictionary<string, object>()
    {
        {"data-name","StartTime"},
    };
    Dictionary<string, object> EndName = new Dictionary<string, object>()
    {
        {"data-name","EndTime"},
    };
    Dictionary<string, object> EventType = new Dictionary<string, object>()
    {
        {"data-name","EventType"},
    };

    List<ScheduleData.DoctorsEventData> DataSource = new ScheduleData().GetDoctorsEventData();
}

<style>
    .custom-event-editor td {
        padding: 7px;
        padding-right: 16px;
    }
</style>