@page "/Grid/PagingAPI"

@using Syncfusion.EJ2.Blazor.Grids
@using Syncfusion.EJ2.Blazor.DropDowns
@using Syncfusion.EJ2.Blazor.Inputs
@using Syncfusion.EJ2.Blazor.Buttons

@*Hidden:Lines*@
@using ej2_blazor_samples
@using ej2_blazor_griddata
@{
    SampleBrowser.CurrentSampleName = "Paging API";
    SampleBrowser.CurrentControlName = "DataGrid";
    SampleBrowser.CurrentControlCategory = "DataGrid";
    SampleBrowser.CurrentControl = SampleBrowser.Config.DataGrid;
    SampleBrowser.TitleTag = "DataGrid . Paging API . Syncfusion Blazor Components - Preview";
    SampleBrowser.MetaDescription = "This demo for Syncfusion Blazor DataGrid component explains the way of changing the pageSize, pageCount and current page using paging API.";
    SampleBrowser.ActionDescription = new string[] {
        @"<p>This sample demonstrates the usage of paging API in Grid. In this sample, use the properties panel to change the page size,
        page count and current page of the Grid.</p>"
    };
    SampleBrowser.Description = new string[]{
        @"<p>Paging allows you to display the contents of the Grid in page segments. The number of items on a page is determined by the <code><a target='_blank' class='code' href='https://help.syncfusion.com/cr/aspnetcore-blazor/Syncfusion.EJ2.Blazor~Syncfusion.EJ2.Blazor.Grids.GridPageSettings~PageSize.html'>PageSize</a></code> property of the <code><a target='_blank' class='code' href='https://help.syncfusion.com/cr/aspnetcore-blazor/Syncfusion.EJ2.Blazor~Syncfusion.EJ2.Blazor.Grids.GridPageSettings.html'>GridPageSettings</a></code> component. If no value is specified for the <code><a target='_blank' class='code' href='https://help.syncfusion.com/cr/aspnetcore-blazor/Syncfusion.EJ2.Blazor~Syncfusion.EJ2.Blazor.Grids.GridPageSettings~PageSize.html'>PageSize</a></code> property, the Grid will display 12 items on a page. By default, paging is disabled. To enable paging, set <code><a target='_blank' class='code' href='https://help.syncfusion.com/cr/aspnetcore-blazor/Syncfusion.EJ2.Blazor~Syncfusion.EJ2.Blazor.Grids.GridModel%601~AllowPaging.html'>AllowPaging</a></code> property to true.</p>
        <p>In this demo,</p>
        <ul>
             <li>Click the <strong>Allow Paging</strong> check box to enable/disable paging feature.</li>
             <li>Change the value of <strong>Page Size</strong> textbox to change <code><a target='_blank' class='code' href='https://help.syncfusion.com/cr/aspnetcore-blazor/Syncfusion.EJ2.Blazor~Syncfusion.EJ2.Blazor.Grids.GridPageSettings~PageSize.html'>PageSize</a></code> value.</li>
             <li>Change the value of <strong>Page Count</strong> textbox to change <code><a target='_blank' class='code' href='https://help.syncfusion.com/cr/aspnetcore-blazor/Syncfusion.EJ2.Blazor~Syncfusion.EJ2.Blazor.Grids.GridPageSettings~PageCount.html'>PageCount.</a></code> value.</li>
             <li>Change the value of <strong>Current Page</strong> textbox to change <code><a target='_blank' class='code' href='https://help.syncfusion.com/cr/aspnetcore-blazor/Syncfusion.EJ2.Blazor~Syncfusion.EJ2.Blazor.Grids.GridPageSettings~CurrentPage.html'>CurrentPage.</a></code></li>
        </ul>"
    };
}
@*End:Hidden*@

<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <div class="row">
            <EjsGrid DataSource="@GridData" AllowPaging="true" Height="365">
                <GridPageSettings PageCount="5" PageSizes="true"></GridPageSettings>
                <GridColumns>
                    <GridColumn Field=@nameof(OrdersDetails.OrderID) HeaderText="Order ID" TextAlign="TextAlign.Right"  Width="120"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.CustomerID) HeaderText="Customer Name" Width="150"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.OrderDate) HeaderText="Order Date" Format="d" Type="ColumnType.Date" TextAlign="TextAlign.Right"  Width="130"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.Freight) HeaderText="Freight" Format="C2" TextAlign="TextAlign.Right"  Width="120"></GridColumn>                   
                    <GridColumn Field=@nameof(OrdersDetails.ShipCountry) HeaderText="Ship Country" Width="150"></GridColumn>
                </GridColumns>
            </EjsGrid>
        </div>
    </div>
</div>

@*<div class="col-lg-3 property-section">
    <h4 style="margin-top:38px;">Properties</h4>

    <table id="property" style="width: 90%; height: 350px;">
        <tr>
            <td class="left-side" style="padding-right:15px;">Allow Paging</td>
            <td>
                <EjsCheckBox ID="paging" Checked="true"></EjsCheckBox>
            </td>
        </tr>

        <tr>
            <td class="left-side" style="padding-right:15px;">Page Size Mode</td>
            <td>
                <EjsDropDownList ID="sizemode" Index="0" PopupWidth="110px" DataSource="@sizemode" Change="@ModeChange">
                    <DropDownListFieldSettings text="id" value="type"></DropDownListFieldSettings>
                </EjsDropDownList>
            </td>
        </tr>
        <tr>
            <td class="left-side" style="padding-right:15px;">Page Size</td>
            <td>
                <EjsNumericTextBox id="pagesize" value="10" format="##" min="1" max="36"></EjsNumericTextBox>
            </td>
        </tr>
        <tr>
            <td class="left-side" style="padding-right:15px;">Page Count</td>
            <td>
                <EjsNumericTextBox id="pagecount" value="2" format="##" min="1" max="4"></EjsNumericTextBox>
            </td>
        </tr>
        <tr>
            <td class="left-side" style="padding-right:15px;">Current Page</td>
            <td>
                <EjsNumericTextBox id="currentpage" value="1" format="##" min="1" max="17"></EjsNumericTextBox>
            </td>
        </tr>
    </table>
</div>*@

@code{

    public List<OrdersDetails> GridData { get; set; }

    public class SizeMode
    {
        public string id { get; set; }

        public string type { get; set; }
    }

    private List<SizeMode> sizemode = new List<SizeMode>()
    {
        new SizeMode(){ id= "All", type= "All" },
        new SizeMode(){ id= "Root", type= "Root" },
    };

    protected override void OnInitialized()
    {
        GridData = OrdersDetails.GetAllRecords();
    }

    public void ModeChange(object args)
    {
        
    }
}
