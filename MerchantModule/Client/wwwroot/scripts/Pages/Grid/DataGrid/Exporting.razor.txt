@page "/Grid/Exporting"

@using Syncfusion.EJ2.Blazor.Grids
@using Syncfusion.EJ2.Blazor.Navigations
@using ej2_blazor_samples
@using ej2_blazor_griddata
@inherits SampleBaseComponent;

<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <div class="row">

            <EjsGrid ID="Grid" @ref="Grid" DataSource="@GridData" AllowPaging="true" Toolbar="@(new List<string>() { "ExcelExport", "CsvExport", "PdfExport" })" AllowExcelExport="true" AllowPdfExport="true">
                <GridEvents OnToolbarClick="ToolbarClick" TValue="OrdersDetails"></GridEvents>
                <GridColumns>
                    <GridColumn Field=@nameof(OrdersDetails.OrderID) HeaderText="Order ID" TextAlign="TextAlign.Right" Width="120"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.CustomerID) HeaderText="Customer Name" Width="150"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.Freight) HeaderText="Freight" Format="C2" TextAlign="TextAlign.Right" Width="120"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.ShipCity) HeaderText="Ship City" Width="150"></GridColumn>
                    <GridColumn Field=@nameof(OrdersDetails.ShipCountry) HeaderText="Ship Country" Width="150"></GridColumn>
                </GridColumns>
            </EjsGrid>

        </div>
    </div>
</div>

@code{
    EjsGrid<OrdersDetails> Grid;

    public List<OrdersDetails> GridData { get; set; }

    protected override void OnInitialized()
    {
        GridData = OrdersDetails.GetAllRecords();
    }

    public void ToolbarClick(Syncfusion.EJ2.Blazor.Navigations.ClickEventArgs args)
    {
        if (args.Item.Id == "Grid_pdfexport")
        {
           this.Grid.PdfExport();
        }
        if (args.Item.Id == "Grid_excelexport")
        {
           this.Grid.ExcelExport();
        }
        if (args.Item.Id == "Grid_csvexport")
        {
           this.Grid.CsvExport();
        }
    }

}
