@page "/Grid/SelectionAPI"

@using Syncfusion.EJ2.Blazor.Grids
@using Syncfusion.EJ2.Blazor.Inputs
@using Syncfusion.EJ2.Blazor.Buttons

@*Hidden:Lines*@
@using ej2_blazor_samples
@using ej2_blazor_inventordata
@{
    SampleBrowser.CurrentSampleName = "Selection API";
    SampleBrowser.CurrentControlName = "DataGrid";
    SampleBrowser.CurrentControlCategory = "DataGrid";
    SampleBrowser.CurrentControl = SampleBrowser.Config.DataGrid;
    SampleBrowser.TitleTag = "DataGrid . Selection API . Syncfusion Blazor Components - Preview";
    SampleBrowser.MetaDescription = "This demo for Syncfusion Blazor DataGrid component shows the usage of the selection API.";
    SampleBrowser.ActionDescription = new string[] {
        @"<p>
            This sample demonstrates the selection functionality of the Grid, you can select multiple row by entering start and end index then click the select row button.
        To clear all selected rows, click clear selection button.
        </p>"
    };
    SampleBrowser.Description = new string[]{
        @"<p>Selection provides an interactive support to highlight the row or cell that you select. Selection can be done through simple mouse down or keyboard interaction. To enable selection, set <code><a target='_blank' class='code' href='https://help.syncfusion.com/cr/aspnetcore-blazor/Syncfusion.EJ2.Blazor~Syncfusion.EJ2.Blazor.Grids.GridModel%601~AllowSorting.html'>AllowSelection</a></code> as true.</p>
        <p>Grid supports two types of selection which can be set using <code><a target='_blank' class='code' href='https://help.syncfusion.com/cr/aspnetcore-blazor/Syncfusion.EJ2.Blazor~Syncfusion.EJ2.Blazor.Grids.GridSelectionSettings~Type.html'>Type</a></code> property of the <code><a target='_blank' class='code' href='https://help.syncfusion.com/cr/aspnetcore-blazor/Syncfusion.EJ2.Blazor~Syncfusion.EJ2.Blazor.Grids.GridSelectionSettings.html'>GridSelectionSettings</a></code> component. They are,</p>
        <ul>
            <li><code>Single</code> - Enabled by default. Allows the user to select single row/cell at a time.</li>
            <li><code>Multiple</code> - Allows the user to select more than one row/cell at a time.</li>
        </ul>
        <p>Also, three modes of selection are supported which can be set using <code><a target='_blank' class='code' href=' https://help.syncfusion.com/cr/aspnetcore-blazor/Syncfusion.EJ2.Blazor~Syncfusion.EJ2.Blazor.Grids.GridSelectionSettings~Mode.html '>Mode</a></code> property. They are,</p>
        <ul>
            <li><code>Row</code> - Enabled by default. Enables the row selection in Grid.</li>
            <li><code>Cell</code> - Enables the cell selection in Grid.</li>
            <li><code>Both</code> - Enables both the row and cell selection in Grid. Clicking any cell will select the both row and cell simultaneously.</li>
        </ul>
        <p>To perform the multi-selection, hold <strong>CTRL</strong> key and click the desired rows/cells.
        To select range of rows/cells, hold <strong>SHIFT</strong> key and click the rows/cells.</p>
        <p>While using the Grid in a touch environment, there is an option for multi-selection through single tap on the row and it will show a popup with the multi-selection symbol.
        Tap the icon to enable multi-selection in a single tap.
        </p>
        <p>In this demo, enter the values in the Start and To text box to select the range of rows. And click the Clear Selection button to deselect the rows.</p>"
    };
}
@*End:Hidden*@

<div class="col-lg-12 control-section">
    <div class="content-wrapper">
        <div class="row">
            <EjsGrid DataSource="@GridData" AllowSelection="true" AllowPaging="true">
                <GridSelectionSettings Type="Syncfusion.EJ2.Blazor.Grids.SelectionType.Multiple"></GridSelectionSettings>
                <GridPageSettings PageCount="2"></GridPageSettings>
                <GridColumns>
                    <GridColumn Field=@nameof(InventorDetails.Inventor) HeaderText="Inventor Name" IsPrimaryKey="true" Width="140"></GridColumn>
                    <GridColumn Field=@nameof(InventorDetails.NumberofPatentFamilies) HeaderText="No of Patent Families" Width="185" TextAlign="TextAlign.Right" ></GridColumn>
                    <GridColumn Field=@nameof(InventorDetails.Country) HeaderText="Country" Width="120"></GridColumn>
                    <GridColumn Field=@nameof(InventorDetails.Active) HeaderText="Active" Width="130"></GridColumn>
                </GridColumns>
            </EjsGrid>
        </div>
    </div>
</div>

@*<div class="col-lg-3 property-section">
    <h4 style="margin-top:38px;">Properties</h4>

    <table id="property" style="width: 73%; height: 300px;">
        <tr>
            <td class="left-side" style="padding-right:15px;"><b>Select Rows</b></td>
        </tr>
        <tr>
            <td class="left-side" style="padding-right:15px;">Start</td>
            <td>
                <EjsNumericTextBox id="start" min="1" width="100"></EjsNumericTextBox>
            </td>
        </tr>
        <tr>
            <td class="left-side" style="padding-right:15px;">To</td>
            <td>
                <EjsNumericTextBox id="to" min="1" width="100"></EjsNumericTextBox>
            </td>
        </tr>
        <tr>
            <td class="left-side" style="padding-right:15px;"><b>Select Row</b></td>
            <td>
                <EjsButton id="select" IsPrimary="true">Select Row</EjsButton>
            </td>
        </tr>
        <tr>
            <td class="left-side" style="padding-right:15px;"><b>Clear Selection</b></td>
            <td>
                <EjsButton id="clear" IsPrimary="true">Clear Selection</EjsButton>
            </td>
        </tr>
    </table>
</div>*@

@code{

    public List<InventorDetails> GridData { get; set; }

    protected override void OnInitialized()
    {
        GridData = InventorDetails.GetAllRecords();
    }
}
