@page "/Editors/DropDown"

@using Syncfusion.EJ2.Blazor
@using Syncfusion.EJ2.Blazor.Buttons
@using Syncfusion.EJ2.Blazor.DropDowns
@using Syncfusion.EJ2.Blazor.InPlaceEditor

@inherits SampleBaseComponent;

<div class="row">
    <div class="col-lg-8 control-section inplace-control-section drop-down-layout">
        <div class="control_wrapper">
            <table>
                <tr>
                    <td>
                        <label class="control-label">
                            DropDownList
                        </label>
                    </td>
                    <td>
                        <EjsInPlaceEditor Mode="@Mode" Type="@InputType.DropDownList" Value="@DropdownValue" Model="@DropdownData">
                        </EjsInPlaceEditor>
                    </td>
                </tr>
                <tr>
                    <td>
                        <label class="control-label">
                            AutoComplete
                        </label>
                    </td>
                    <td>
                        <EjsInPlaceEditor Mode="@Mode" Type="@InputType.AutoComplete" Value="@AutoValue" Model="@AutocompleteData">
                        </EjsInPlaceEditor>
                    </td>
                </tr>
                <tr>
                    <td>
                        <label class="control-label">
                            ComboBox
                        </label>
                    </td>
                    <td>
                        <EjsInPlaceEditor Mode="@Mode" Type="@InputType.ComboBox" Value="@ComboValue" Model="@ComboData">
                        </EjsInPlaceEditor>
                    </td>
                </tr>
                <tr>
                    <td>
                        <label class="control-label">
                            MultiSelect
                        </label>
                    </td>
                    <td>
                        <EjsInPlaceEditor Mode="@Mode" Type="InputType.MultiSelect" Value="@MultiValue" Model="@MultiSelectData">
                        </EjsInPlaceEditor>
                    </td>
                </tr>
            </table>
        </div>
    </div>
    <div class="col-lg-4 property-section" id="dropdownProperty">
        <table id="property" title="Properties">
            <tr>
                <td>
                    <div> Mode</div>
                </td>
                <td>
                    <div>
                        <EjsDropDownList Width="90%" TValue="string" TItem="InplaceModes" DataSource="@ModeData" @bind-Value="@DropMode">
                            <DropDownListEvents TValue="string" ValueChange="ChangeEditMode"></DropDownListEvents>
                            <DropDownListFieldSettings Text="text" Value="value"></DropDownListFieldSettings>
                        </EjsDropDownList>
                    </div>
                </td>
            </tr>
        </table>
    </div>
</div>

@code {
    private RenderMode Mode = RenderMode.Inline;
    private string DropdownValue = "Canada";
    private string AutoValue = "Australia";
    private string ComboValue = "Finland";
    private string[] MultiValue = new string[] { "Australia", "Bermuda" };
    public string DropMode { get; set; } = "Inline";

    public class InplaceModes
    {
        public string value { get; set; }
        public string text { get; set; }
    }
    List<InplaceModes> ModeData = new List<InplaceModes>()
    {
        new InplaceModes(){ value= "Inline", text= "Inline" },
        new InplaceModes(){ value= "Popup", text= "Popup" }
    };
    private object DropdownData = new
    {
        placeholder = "Find a countries",
        dataSource = new string[] { "Australia", "Bermuda", "Canada", "Cameroon", "Denmark", "Finland", "Greenland", "Poland" }
    };
    private object AutocompleteData = new
    {
        placeholder = "Type to search countries",
        dataSource = new string[] { "Australia", "Bermuda", "Canada", "Cameroon", "Denmark", "Finland", "Greenland", "Poland" }
    };
    private object ComboData = new
    {
        placeholder = "Find a countries",
        dataSource = new string[] { "Australia", "Bermuda", "Canada", "Cameroon", "Denmark", "Finland", "Greenland", "Poland" }
    };

    private void ChangeEditMode(ChangeEventArgs<string> args)
    {
        Mode = (args.Value.ToString() == "Popup" ? RenderMode.Popup : RenderMode.Inline);
        this.StateHasChanged();
    }
    private object MultiSelectData = new
    {
        mode = "Box",
        placeholder = "Choose the countries",
        dataSource = Places
    };

    public class Countries
    {
        public string text { get; set; }
    }

    public static List<Countries> Places = new List<Countries>()
{
        new Countries(){ text= "Australia" },
        new Countries(){ text= "Bermuda" },
        new Countries(){ text= "Canada" },
        new Countries(){ text= "Cameroon" },
        new Countries(){ text= "Denmark" },
        new Countries(){ text= "Finland" },
        new Countries(){ text= "Greenland" },
        new Countries(){ text= "Poland" }
    };
}

<style>
    .inplace-control-section.drop-down-layout .e-inplaceeditor .e-editable-component .e-clear-icon-hide,
    .e-inplaceeditor-tip .e-editable-component .e-input-group .e-clear-icon.e-clear-icon-hide {
        display: block;
        visibility: hidden;
    }

    .inplace-control-section.drop-down-layout .control_wrapper label {
        padding: 15px;
        text-align: left;
        font-weight: 400;
        font-size: 14px;
        margin-bottom: 0px;
    }

    .inplace-control-section.drop-down-layout .control_wrapper {
        margin: auto;
        max-width: 400px;
    }

        .inplace-control-section.drop-down-layout .control_wrapper table {
            margin: auto;
        }

            .inplace-control-section.drop-down-layout .control_wrapper table td {
                width: 200px;
                height: 100px;
            }

    #dropdownProperty table td {
        width: 50%;
    }

    #dropdownProperty table div {
        padding-left: 10px;
        padding-top: 10px;
    }
</style>
