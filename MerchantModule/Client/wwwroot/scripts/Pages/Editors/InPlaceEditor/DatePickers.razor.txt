@page "/Editors/DatePickers"

@using Syncfusion.EJ2.Blazor
@using Syncfusion.EJ2.Blazor.Buttons
@using Syncfusion.EJ2.Blazor.DropDowns
@using Syncfusion.EJ2.Blazor.InPlaceEditor

@inherits SampleBaseComponent;

<div class="row">
    <div class="col-lg-8 control-section inplace-control-section pickers-layout">
        <div class="control_wrapper">
            <table>
                <tr>
                    <td>
                        <label class="control-label">
                            DatePicker
                        </label>
                    </td>
                    <td>
                        <EjsInPlaceEditor Mode="@Mode" Type="InputType.Date" Value="@DateValue1" Model="@DateData">
                        </EjsInPlaceEditor>
                    </td>
                </tr>
                <tr>
                    <td>
                        <label class="control-label">
                            TimePicker
                        </label>
                    </td>
                    <td>
                        <EjsInPlaceEditor Mode="@Mode" Type="InputType.Time" Value="@DateValue2" Model="@TimeData">
                        </EjsInPlaceEditor>
                    </td>
                </tr>
                <tr>
                    <td>
                        <label class="control-label">
                            DateTimePicker
                        </label>
                    </td>
                    <td>
                        <EjsInPlaceEditor Mode="@Mode" Type="InputType.DateTime" Value="@DateValue3" Model="@DateTimeData">
                        </EjsInPlaceEditor>
                    </td>
                </tr>
                <tr>
                    <td>
                        <label class="control-label">
                            DateRangePicker
                        </label>
                    </td>
                    <td>
                        <EjsInPlaceEditor Mode="@Mode" Type="InputType.DateRange" Value="@DateRangeValue" Model="@DateRangeData">
                        </EjsInPlaceEditor>
                    </td>
                </tr>
            </table>
        </div>
    </div>
    <div class="col-lg-4 property-section" id="pickerProperty">
        <table id="property" title="Properties">
            <tr>
                <td>
                    <div> Mode</div>
                </td>
                <td>
                    <div>
                        <EjsDropDownList Width="90%" TItem="InplaceModes" TValue="string" DataSource="@ModeData" @bind-Value="@DropMode">
                            <DropDownListEvents TValue="string" ValueChange="ChangeEditMode"></DropDownListEvents>
                            <DropDownListFieldSettings Text="text" Value="value"></DropDownListFieldSettings>
                        </EjsDropDownList>
                    </div>
                </td>
            </tr>
        </table>
    </div>
</div>

@code {
    private RenderMode Mode = RenderMode.Inline;
    private DateTime DateValue1 = new DateTime(2017, 05, 23);
    private DateTime DateValue2 = new DateTime(2017, 05, 23);
    private DateTime DateValue3 = new DateTime(2017, 05, 23);
    private DateTime[] DateRangeValue = new DateTime[2] { new DateTime(2017, 05, 23), new DateTime(2017, 07, 05) };
    private object DateData = new { placeholder = "Select a date" };
    private object TimeData = new { placeholder = "Select a time" };
    private object DateTimeData = new { placeholder = "Select a date and time" };
    private object DateRangeData = new { placeholder = "Select a date range" };
    public string DropMode { get; set; } = "Inline";
    
    public class InplaceModes
    {
        public string value { get; set; }
        public string text { get; set; }
    }
    List<InplaceModes> ModeData = new List<InplaceModes>()
    {
        new InplaceModes(){ value= "Inline", text= "Inline" },
        new InplaceModes(){ value= "Popup", text= "Popup" }
    };
    private void ChangeEditMode(ChangeEventArgs<string> args)
    {
        this.Mode = (args.Value.ToString() == "Popup" ? RenderMode.Popup : RenderMode.Inline);
        this.StateHasChanged();
    }
}

<style>
    /* custom code start */
    .inplace-control-section.pickers-layout .control_wrapper {
        margin: auto;
        max-width: 400px;
    }

        .inplace-control-section.pickers-layout .control_wrapper table {
            margin: auto;
        }

            .inplace-control-section.pickers-layout .control_wrapper table td {
                width: 200px;
                height: 100px;
            }

                .inplace-control-section.pickers-layout .control_wrapper table td .control-label {
                    margin-bottom: 0px;
                    text-align: left;
                    font-size: 14px;
                    font-weight: 400
                }

    /* custom code end */

    #pickerProperty table td {
        width: 50%;
    }

    #pickerProperty table div {
        padding-left: 10px;
        padding-top: 10px;
    }

    .e-inplaceeditor-tip .e-editable-component .e-input-group .e-clear-icon.e-clear-icon-hide,
    .inplace-control-section.pickers-layout .e-inplaceeditor .e-editable-component .e-clear-icon-hide {
        display: block;
        visibility: hidden;
    }

    @@media (max-width: 768px) {
        .inplace-control-section.pickers-layout {
            padding-left: 0;
            padding-right: 0;
        }

        .inplace-control-section .control_wrapper table tr td:nth-child(1) {
            width: 130px;
        }

        .inplace-control-section .control_wrapper table tr td:nth-child(2) {
            width: 200px;
        }
    }
</style>
