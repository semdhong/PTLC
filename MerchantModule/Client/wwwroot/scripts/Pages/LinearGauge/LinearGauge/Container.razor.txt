@page "/LinearGauge/Container"

@using Syncfusion.EJ2.Blazor.LinearGauge
@using Syncfusion.EJ2.Blazor.DropDowns
@using Newtonsoft.Json;

@inherits SampleBaseComponent;

<div class="col-lg-9 control-section sb-property-border">
    <div class="control-section">
        <EjsLinearGauge Title="Temparature Measure" Orientation="@gaugeOrientation">
            <LinearGaugeContainer Width="13" RoundedCornerRadius="5" Type="@gaugeContainerType">
                <LinearGaugeAxes>
                    <LinearGaugeAxis Minimum="0" Maximum="180">
                        <LinearGaugeMajorTicks Color="#9e9e9e" Interval="20" Height="20">
                        </LinearGaugeMajorTicks>
                        <LinearGaugeMinorTicks Color="#9e9e9e" Interval="10" Height="10">
                        </LinearGaugeMinorTicks>
                        <LinearGaugePointers>
                            <LinearGaugePointer Value="90" Height="13" Width="13" Type="Point.Bar" Color="#f02828">
                            </LinearGaugePointer>
                        </LinearGaugePointers>
                    </LinearGaugeAxis>
                    <LinearGaugeAxis Minimum="0" Maximum="180" OpposedPosition="true">
                        <LinearGaugeMajorTicks Interval="20" Height="20">
                        </LinearGaugeMajorTicks>
                        <LinearGaugeMinorTicks Color="#9e9e9e" Interval="10" Height="10">
                        </LinearGaugeMinorTicks>
                        <LinearGaugePointers>
                            <LinearGaugePointer Width="0">
                            </LinearGaugePointer>
                        </LinearGaugePointers>
                    </LinearGaugeAxis>
                </LinearGaugeAxes>
            </LinearGaugeContainer>
        </EjsLinearGauge>
    </div>
</div>
<div class="col-md-3 property-section">
    <div class="property-panel-section">
        <div class="property-panel-header">Properties</div>
        <div class="property-panel-content">
            <table id="property" title="Properties" style="width: 100%" class="property-panel-table">
                <tbody>
                    <tr>
                        <td>
                            <div>Orientation</div>
                        </td>
                        <td>
                            <div>
                                <EjsDropDownList TValue="string" TItem="OrientationData" DataSource="@gaugeOrientData" Value="@orientationValue">
                                    <DropDownListEvents TValue="string" ValueChange="orintationChange"></DropDownListEvents>
                                    <DropDownListFieldSettings text="Name" value="Name"></DropDownListFieldSettings>
                                </EjsDropDownList>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <div>Container Type</div>
                        </td>
                        <td>
                            <div>
                                <EjsDropDownList TValue="string" TItem="ContainerTypeData" DataSource="@containerTypeData" Value="@containerTypeValue">
                                    <DropDownListEvents TValue="string" ValueChange="containerTypeChange"></DropDownListEvents>
                                    <DropDownListFieldSettings text="Name" value="Name"></DropDownListFieldSettings>
                                </EjsDropDownList>
                            </div>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>

<style>
    #control-section {
        padding: 0px !important;
    }

    .property-panel-table div {
        padding-left: 10px;
        padding-top: 10px;
    }
</style>

@code {
    private Orientation gaugeOrientation = Orientation.Vertical;
    private ContainerType gaugeContainerType = ContainerType.Thermometer;
    private String orientationValue = "Vertical";
    private String containerTypeValue = "Thermometer";
    public class OrientationData
    {
        public string Name { get; set; }
    }
    private List<OrientationData> gaugeOrientData = new List<OrientationData> {
        new OrientationData{ Name = "Vertical"},
        new OrientationData{ Name = "Horizontal"},
    };
    public class ContainerTypeData
    {
        public string Name { get; set; }
    }
    private List<ContainerTypeData> containerTypeData = new List<ContainerTypeData> {
        new ContainerTypeData{ Name = "Thermometer"},
        new ContainerTypeData{ Name = "Normal"},
        new ContainerTypeData{ Name = "RoundedRectangle"},
    };
    private void orintationChange(Syncfusion.EJ2.Blazor.DropDowns.ChangeEventArgs<string> args)
    {
        this.orientationValue = (args.Value).ToString();
        this.gaugeOrientation = this.orientationValue == "Vertical" ? Orientation.Vertical : Orientation.Horizontal;
    }
    private void containerTypeChange(Syncfusion.EJ2.Blazor.DropDowns.ChangeEventArgs<string> args)
    {
        this.containerTypeValue = (args.Value).ToString();
        if (this.containerTypeValue == "Thermometer")
        {
            this.gaugeContainerType = ContainerType.Thermometer;
        }
        else if (this.containerTypeValue == "Normal")
        {
            this.gaugeContainerType = ContainerType.Normal;
        }
        else
        {
            this.gaugeContainerType = ContainerType.RoundedRectangle;
        }
    }
}
