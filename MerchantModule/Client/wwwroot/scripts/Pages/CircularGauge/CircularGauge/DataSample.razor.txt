@page "/CircularGauge/DataSample"

@using Syncfusion.EJ2.Blazor.CircularGauge
@using Syncfusion.EJ2.Blazor.Grids

@inherits SampleBaseComponent;


	<div class="control-section">
    <div class="row">
        <div class="col-sm-12">
            <div class="row">
                <div class="col-sm-4">
                    <EjsCircularGauge Height="250px" @ref="@germanRef">
                        <CircularGaugeAxes>
                            <CircularGaugeAxis StartAngle="230" EndAngle="130">
                                <CircularGaugeAxisLineStyle Width="0" Color="transparent">
                                </CircularGaugeAxisLineStyle>
                                <CircularGaugeAxisLabelStyle Position="Position.Outside">
                                    <CircularGaugeAxisLabelFont Size="0px" Color="transparent"></CircularGaugeAxisLabelFont>
                                </CircularGaugeAxisLabelStyle>
                                <CircularGaugeAxisMajorTicks Width="0" Height="0.01">
                                </CircularGaugeAxisMajorTicks>
                                <CircularGaugeAxisMinorTicks Width="0" Height="0.01">
                                </CircularGaugeAxisMinorTicks>
                                <CircularGaugeRanges>
                                    <CircularGaugeRange Start="0" End="50" StartWidth="15" EndWidth="15" Color="#EC121C"></CircularGaugeRange>
                                    <CircularGaugeRange Start="50" End="100" StartWidth="15" EndWidth="15" Color="#45EA0C"></CircularGaugeRange>
                                </CircularGaugeRanges>
                                <CircularGaugePointers>
                                    <CircularGaugePointer Value="@germanPointerValue" Radius="60%" Color="#777777" PointerWidth="5">
                                        <CircularGaugePointerAnimation Enable="false" Duration="900"></CircularGaugePointerAnimation>
                                        <CircularGaugeCap Radius="6" Color="#777777">
                                            <CircularGaugeCapBorder Width="0">
                                            </CircularGaugeCapBorder>
                                        </CircularGaugeCap>
                                        <CircularGaugeNeedleTail Length="25%" Color="#777777">
                                        </CircularGaugeNeedleTail>
                                    </CircularGaugePointer>
                                </CircularGaugePointers>
                                <CircularGaugeAnnotations>
                                    <CircularGaugeAnnotation Angle="180" ZIndex="1" Radius="30%">
                                        <ContentTemplate>
                                            <div id='templateWrap'>
                                                <img src="styles/images/circulargauge/positive.png" />
                                                <div class='des'>
                                                    <div style="color:#424242;font-size:20px;font-family:Roboto">@germanAnnotationText</div>
                                                </div>
                                            </div>
                                        </ContentTemplate>
                                    </CircularGaugeAnnotation>
                                    <CircularGaugeAnnotation Angle="180" ZIndex="1" Radius="65%" Content="Germany">
                                        <ContentTemplate>
                                            <div style="color:#9E9E9E;font-size:16px;font-style:Roboto;margin-left:-30px;">Germany</div>
                                        </ContentTemplate>
                                    </CircularGaugeAnnotation>
                                </CircularGaugeAnnotations>
                            </CircularGaugeAxis>
                        </CircularGaugeAxes>
                    </EjsCircularGauge>
                </div>
                <div class="col-sm-4">
                    <EjsCircularGauge Height="250px"  @ref="@usaRef">
                        <CircularGaugeAxes>
                            <CircularGaugeAxis StartAngle="230" EndAngle="130">
                                <CircularGaugeAxisLineStyle Width="0" Color="transparent">
                                </CircularGaugeAxisLineStyle>
                                <CircularGaugeAxisLabelStyle Position="Position.Outside">
                                    <CircularGaugeAxisLabelFont Size="0px" Color="transparent"></CircularGaugeAxisLabelFont>
                                </CircularGaugeAxisLabelStyle>
                                <CircularGaugeAxisMajorTicks Width="0" Height="0.01">
                                </CircularGaugeAxisMajorTicks>
                                <CircularGaugeAxisMinorTicks Width="0" Height="0.01">
                                </CircularGaugeAxisMinorTicks>
                                <CircularGaugeRanges>
                                    <CircularGaugeRange Start="0" End="50" StartWidth="15" EndWidth="15" Color="#EC121C"></CircularGaugeRange>
                                    <CircularGaugeRange Start="50" End="100" StartWidth="15" EndWidth="15" Color="#45EA0C"></CircularGaugeRange>
                                </CircularGaugeRanges>
                                <CircularGaugePointers>
                                    <CircularGaugePointer Value="@usaPointerValue" Radius="60%" Color="#777777" PointerWidth="5">
                                        <CircularGaugePointerAnimation Enable="false" Duration="900"></CircularGaugePointerAnimation>
                                        <CircularGaugeCap Radius="6" Color="#777777">
                                            <CircularGaugeCapBorder Width="0">
                                            </CircularGaugeCapBorder>
                                        </CircularGaugeCap>
                                        <CircularGaugeNeedleTail Length="25%" Color="#777777">
                                        </CircularGaugeNeedleTail>
                                    </CircularGaugePointer>
                                </CircularGaugePointers>
                                <CircularGaugeAnnotations>
                                    <CircularGaugeAnnotation Angle="180" ZIndex="1" Radius="30%">
                                        <ContentTemplate>
                                            <div id='templateWrap'>
                                                <img src="styles/images/circulargauge/positive.png" />
                                                <div class='des'>
                                                    <div style="color:#424242;font-size:20px;font-family:Roboto">@usaAnnotationText</div>
                                                </div>
                                            </div>
                                        </ContentTemplate>
                                    </CircularGaugeAnnotation>
                                    <CircularGaugeAnnotation Angle="180" ZIndex="1" Radius="65%" Content="USA">
                                        <ContentTemplate>
                                            <div style="color:#9E9E9E;font-size:16px;font-style:Roboto;margin-left:-10px;">USA</div>
                                        </ContentTemplate>
                                    </CircularGaugeAnnotation>
                                </CircularGaugeAnnotations>
                            </CircularGaugeAxis>
                        </CircularGaugeAxes>
                    </EjsCircularGauge>
                </div>
                <div class="col-sm-4">
                    <EjsCircularGauge Height="250px"  @ref="@ukRef">
                        <CircularGaugeAxes>
                            <CircularGaugeAxis StartAngle="230" EndAngle="130">
                                <CircularGaugeAxisLineStyle Width="0" Color="transparent">
                                </CircularGaugeAxisLineStyle>
                                <CircularGaugeAxisLabelStyle Position="Position.Outside">
                                    <CircularGaugeAxisLabelFont Size="0px" Color="transparent"></CircularGaugeAxisLabelFont>
                                </CircularGaugeAxisLabelStyle>
                                <CircularGaugeAxisMajorTicks Width="0" Height="0.01">
                                </CircularGaugeAxisMajorTicks>
                                <CircularGaugeAxisMinorTicks Width="0" Height="0.01">
                                </CircularGaugeAxisMinorTicks>
                                <CircularGaugeRanges>
                                    <CircularGaugeRange Start="0" End="50" StartWidth="15" EndWidth="15" Color="#EC121C"></CircularGaugeRange>
                                    <CircularGaugeRange Start="50" End="100" StartWidth="15" EndWidth="15" Color="#45EA0C"></CircularGaugeRange>
                                </CircularGaugeRanges>
                                <CircularGaugePointers>
                                    <CircularGaugePointer Value="@ukPointerValue" Radius="60%" Color="#777777" PointerWidth="5">
                                        <CircularGaugePointerAnimation Enable="false" Duration="900"></CircularGaugePointerAnimation>
                                        <CircularGaugeCap Radius="6" Color="#777777">
                                            <CircularGaugeCapBorder Width="0">
                                            </CircularGaugeCapBorder>
                                        </CircularGaugeCap>
                                        <CircularGaugeNeedleTail Length="25%" Color="#777777">
                                        </CircularGaugeNeedleTail>
                                    </CircularGaugePointer>
                                </CircularGaugePointers>
                                <CircularGaugeAnnotations>
                                    <CircularGaugeAnnotation Angle="180" ZIndex="1" Radius="30%">
                                        <ContentTemplate>
                                            <div id='templateWrap'>
                                                <img src="styles/images/circulargauge/negative.png" />
                                                <div class='des'>
                                                    <div style="color:#424242;font-size:20px;font-family:Roboto">@ukAnnotationText</div>
                                                </div>
                                            </div>
                                        </ContentTemplate>
                                    </CircularGaugeAnnotation>
                                    <CircularGaugeAnnotation Angle="180" ZIndex="1" Radius="65%" Content="UK">
                                        <ContentTemplate>
                                            <div style="color:#9E9E9E;font-size:16px;font-style:Roboto;margin-left:0px;">UK</div>
                                        </ContentTemplate>
                                    </CircularGaugeAnnotation>
                                </CircularGaugeAnnotations>
                            </CircularGaugeAxis>
                        </CircularGaugeAxes>
                    </EjsCircularGauge>
                </div>
            </div>
        </div>
        <style>
            #templateWrap img {
                width: 16px;
                height: 16px;
                margin-top: 4px;
                margin-left:-25px
            }

            #templateWrap .des {
                float: right;
            }
        </style>
        <div class="col-sm-12">
            <div class="row">
                <div class="col-sm-12">
                    <EjsGrid DataSource="@gridData" AllowSelection="false"
                             EnableHover="true">
                        <GridColumns>
                            <GridColumn Field='Country' HeaderText="Country" TextAlign="TextAlign.Left"></GridColumn>
                            <GridColumn Field='Sales' HeaderText="Sales $" TextAlign="TextAlign.Left"></GridColumn>
                            <GridColumn Field='Target' HeaderText="Target $" TextAlign="TextAlign.Left"></GridColumn>
                            <GridColumn Field='vsTarget' HeaderText="vs Target" TextAlign="TextAlign.Left"></GridColumn>
                        </GridColumns>
                    </EjsGrid>
                </div>
            </div>
        </div>
    </div>
</div>

@code{
    EjsCircularGauge germanRef;
    EjsCircularGauge usaRef;
    EjsCircularGauge ukRef;
    private Double germanPointerValue = 75;
    private Double usaPointerValue = 60;
    private Double ukPointerValue = 25;
    private String germanAnnotationText = "75%";
    private String usaAnnotationText = "60%";
    private String ukAnnotationText = "25%";
    public String GermanGridTarget;
    public String UsaGridTarget;
    public String UkGridTarget;
    public class GaugeGridData
    {
        public String Country;
        public Double Sales;
        public Double Target;
        public String vsTarget;
    }
    private List<GaugeGridData> gridData = new List<GaugeGridData>
    {
            new GaugeGridData { Country = "Germany" , Sales = 500 , Target = 400 ,vsTarget = "300"},
            new GaugeGridData { Country = "USA" , Sales = 1000 , Target = 600 ,vsTarget = "360"},
            new GaugeGridData { Country = "UK" , Sales = 600 , Target = 700 ,vsTarget = "-100"},
        };
    System.Timers.Timer syncTimer1 = null;
    protected override void OnInitialized()
    {
        syncTimer1 = new System.Timers.Timer(2000);
        syncTimer1.Elapsed += this.pointerValueUpdate;
        syncTimer1.AutoReset = true;
        syncTimer1.Enabled = true;
    }
    Random Random = new Random();
    void pointerValueUpdate(Object source, System.Timers.ElapsedEventArgs e)
    {
        var Number = Random.NextDouble();
        germanPointerValue = ((Number * 35) + 55);
        usaPointerValue = ((Number * 15) + 60);
        ukPointerValue = ((Number * 30) + 10);
        GermanGridTarget = (4 * germanPointerValue).ToString("N0");
        UsaGridTarget = (6 * usaPointerValue).ToString("N0");
        UkGridTarget = (7 * ukPointerValue).ToString("N0");
        germanAnnotationText = germanPointerValue.ToString("N0") + "%";
        usaAnnotationText = usaPointerValue.ToString("N0") + "%";
        ukAnnotationText = "-" + ukPointerValue.ToString("N0") + "%";
        gridData = new List<GaugeGridData>
        {
            new GaugeGridData { Country = "Germany" , Sales = 500 , Target = 400 ,vsTarget = GermanGridTarget},
            new GaugeGridData { Country = "USA" , Sales = 1000 , Target = 600 ,vsTarget = UsaGridTarget},
            new GaugeGridData { Country = "UK" , Sales = 600 , Target = 700 ,vsTarget = UkGridTarget},
            };
        InvokeAsync(() =>
        {
            germanRef.Refresh();
            usaRef.Refresh();
            ukRef.Refresh();
        });
    }
}