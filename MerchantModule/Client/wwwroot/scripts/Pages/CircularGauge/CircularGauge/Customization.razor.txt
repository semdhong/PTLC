@page "/CircularGauge/Customization"

@using Syncfusion.EJ2.Blazor.CircularGauge
@using Syncfusion.EJ2.Blazor.DropDowns
@using Syncfusion.EJ2.Blazor.Buttons

@inherits SampleBaseComponent;

<div class="col-lg-9 control-section sb-property-border">
    <div style="display:@gauge1">
        <EjsCircularGauge>
            <CircularGaugeEvents></CircularGaugeEvents>
            <CircularGaugeAxes>
                <CircularGaugeAxis StartAngle="300" EndAngle="60" Minimum="999" Maximum="2000" Radius="80%">
                    <CircularGaugeAxisLineStyle Width="0.01">
                    </CircularGaugeAxisLineStyle>
                    <CircularGaugeAxisMajorTicks Width="0.01">
                    </CircularGaugeAxisMajorTicks>
                    <CircularGaugeAxisMinorTicks Width="0.01">
                    </CircularGaugeAxisMinorTicks>
                    <CircularGaugeAxisLabelStyle>
                        <CircularGaugeAxisLabelFont Size="0px">
                        </CircularGaugeAxisLabelFont>
                    </CircularGaugeAxisLabelStyle>
                    <CircularGaugePointers>
                        <CircularGaugePointer Type="PointerType.RangeBar" Value=@tickValue Radius="90%" Color="@rangeBarColorValue" PointerWidth="30">
                            <CircularGaugePointerAnimation Enable="false" Duration="0">
                            </CircularGaugePointerAnimation>
                        </CircularGaugePointer>
                        <CircularGaugePointer Value=@tickValue Radius="90%" Color="@pointerColorValue" PointerWidth="9">
                            <CircularGaugePointerAnimation Enable="false" Duration="0">
                            </CircularGaugePointerAnimation>
                            <CircularGaugeCap Radius="10" Color="@pointerColorValue">
                                <CircularGaugeCapBorder Width="0" Color="@pointerColorValue">
                                </CircularGaugeCapBorder>
                            </CircularGaugeCap>
                        </CircularGaugePointer>
                        <CircularGaugeRanges>
                            <CircularGaugeRange Start="1000" End="2000" Radius="90%" StartWidth="30" EndWidth="30" Color="@rangeColorValue">
                            </CircularGaugeRange>
                        </CircularGaugeRanges>
                    </CircularGaugePointers>
                    <CircularGaugeAnnotations>
                        <CircularGaugeAnnotation Angle="0" Radius="110%" ZIndex="1">
                            <ContentTemplate>
                                <div style='color:#666666;font-size:35px; margin-left:-40px; margin-top:-20px'>@tickValue</div>
                            </ContentTemplate>
                        </CircularGaugeAnnotation>
                    </CircularGaugeAnnotations>
                </CircularGaugeAxis>
            </CircularGaugeAxes>
        </EjsCircularGauge>
    </div>
    <div style="display:@gauge2">
        <EjsCircularGauge>
            <CircularGaugeAxes>
                <CircularGaugeAxis StartAngle="180" EndAngle="180" Minimum="0" Maximum="100" Radius="80%">
                    <CircularGaugeAxisLineStyle Width="0.01">
                    </CircularGaugeAxisLineStyle>
                    <CircularGaugeAxisMajorTicks Width="0.01">
                    </CircularGaugeAxisMajorTicks>
                    <CircularGaugeAxisMinorTicks Width="0.01">
                    </CircularGaugeAxisMinorTicks>
                    <CircularGaugeAxisLabelStyle>
                        <CircularGaugeAxisLabelFont Size="0px">
                        </CircularGaugeAxisLabelFont>
                    </CircularGaugeAxisLabelStyle>
                    <CircularGaugePointers>
                        <CircularGaugePointer Type="PointerType.RangeBar" Value=@tickValue2 Radius="80%" Color="@rangeBarColorValueTwo" PointerWidth="30">
                        </CircularGaugePointer>
                        <CircularGaugeRanges>
                            <CircularGaugeRange Start="0" End="100" Radius="80%" StartWidth="30" EndWidth="30" Color="@rangeColorValueTwo">
                            </CircularGaugeRange>
                        </CircularGaugeRanges>
                    </CircularGaugePointers>
                    <CircularGaugeAnnotations>
                        <CircularGaugeAnnotation Angle="180" Radius="0%" ZIndex="1">
                            <ContentTemplate>
                                <div style='color:#666666;font-size:35px; margin-left:-40px; margin-top:-35px'>@tickValue2 GB</div>
                            </ContentTemplate>
                        </CircularGaugeAnnotation>
                        <CircularGaugeAnnotation Angle="180" Radius="25%" ZIndex="1">
                            <ContentTemplate>
                                <div style='color:#666666;font-size:15px; margin-left:-20px; margin-top:-35px'>Used</div>
                            </ContentTemplate>
                        </CircularGaugeAnnotation>
                    </CircularGaugeAnnotations>

                </CircularGaugeAxis>
            </CircularGaugeAxes>
        </EjsCircularGauge>
    </div>
</div>

<div class="col-lg-3 property-section">
    &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br>
    <div class="property-panel-section">
        <div class="property-panel-header">Properties</div>
        <div class="property-panel-content">
            <table id="property" style="width:100%" title="Properties">
                <tbody>
                    <tr style="height: 50px">
                        <td>
                            <button style="background-image:url(styles/images/circulargauge/gauge1.png);width:70px;height:60px;background-color:white" @onclick="gaugeClick"></button>
                            <div id="random_line" style="display:@gauge1;left: 0px;background: #ff4081;padding-top: 0px;height: 2px !important;width: 60px;margin: 2px 2px 2px 8px;"></div>
                        </td>
                        <td>
                            <button style="background-image:url(styles/images/circulargauge/gauge2.png);width:70px;height:60px;background-color:white" @onclick="netClick"></button>
                            <div id="usage_line" style="display:@gauge2;left: 0px;background: #ff4081;padding-top: 0px;height: 2px !important;width: 60px;margin: 2px 2px 2px 8px;"></div>
                        </td>
                    </tr>
                    <br />
                    <tr>
                        <td>
                            <div>Current Value<span>&nbsp;&nbsp;&nbsp;@tick</span> </div>
                        </td>
                        <td>
                            <div>
                                <input type="range" value="@tick" min="@min" max="@max" @onchange="tickChange" />
                            </div>
                        </td>
                    </tr>&nbsp;
                    <tr style="height: 35px; ">
                        <td style="width: 70%" class="property-text">
                            RangeBar Color
                        </td>
                        <td style="width: 50%;display:@gauge1">
                            <EjsDropDownList DataSource="@rangeBarColor" Value="@rangeBarColorValue" Width="120px">
                                <DropDownListEvents TValue="string" ValueChange="rangeBarColorchange"></DropDownListEvents>
                                <DropDownListFieldSettings Text="Name" Value="Value"></DropDownListFieldSettings>
                            </EjsDropDownList>
                        </td>
                        <td style="width: 50%;display:@gauge2">
                            <EjsDropDownList DataSource="@rangeBarColorTwo" Value="@rangeBarColorValueTwo" Width="120px">
                                <DropDownListEvents TValue="string" ValueChange="rangeBarColorTwochange"></DropDownListEvents>
                                <DropDownListFieldSettings Text="Name" Value="Value"></DropDownListFieldSettings>
                            </EjsDropDownList>
                        </td>
                    </tr>
                    <tr style="height: 35px;">
                        <td style="width: 70%" class="property-text">
                            Range Color
                        </td>
                        <td style="width: 50%;display:@gauge1">
                            <EjsDropDownList DataSource="@rangeColor" Value="@rangeColorValue" Width="120px">
                                <DropDownListEvents TValue="string" ValueChange="rangeColorchange"></DropDownListEvents>
                                <DropDownListFieldSettings Text="Name" Value="Value"></DropDownListFieldSettings>
                            </EjsDropDownList>
                        </td>
                        <td style="width: 50%;display:@gauge2">
                            <EjsDropDownList DataSource="@rangeColorTwo" Value="@rangeColorValueTwo" Width="120px">
                                <DropDownListEvents TValue="string" ValueChange="rangeColorTwochange"></DropDownListEvents>
                                <DropDownListFieldSettings Text="Name" Value="Value"></DropDownListFieldSettings>
                            </EjsDropDownList>
                        </td>
                    </tr>
                    <tr style="height: 35px;">
                        <td style="width: 70%;" class="property-text">
                            Pointer Color
                        </td>
                        <td style="width: 50%;">
                            <EjsDropDownList DataSource="@PointerColor" Value="@pointerColorValue" Width="120px" Enabled="@pointerColorDisable">
                                <DropDownListEvents TValue="string" ValueChange="pointerColorchange"></DropDownListEvents>
                                <DropDownListFieldSettings Text="Name" Value="Value"></DropDownListFieldSettings>
                            </EjsDropDownList>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>


@code{
    public string gauge1 = "block";
    public string gauge2 = "none";
    public string visible = "visible";
    public Boolean pointerColorDisable = true;
    public double min = 1000;
    public double max = 2000;
    public double tick = 1800;
    public double tickValue2 = 50.5;
    public string rangeBarColorValue = "#FFDD00";
    public string rangeColorValue = "#E0E0E0";
    public string rangeBarColorValueTwo = "#FF2680";
    public string rangeColorValueTwo = "#E0E0E0";
    public string pointerColorValue = "#424242";
    public double tickValue = 1800;
    public void gaugeClick(Microsoft.AspNetCore.Components.Web.MouseEventArgs args)
    {
        gauge2 = "none";
        gauge1 = "block";
        pointerColorDisable = true;
        min = 1000;
        max = 2000;
        tick = (tickValue == 1800) ? 1800 : tickValue;
    }
    public void netClick(Microsoft.AspNetCore.Components.Web.MouseEventArgs args)
    {
        gauge1 = "none";
        gauge2 = "block";
        pointerColorDisable = false;
        min = 0;
        max = 100;
        tick = (tickValue2 == 50.5) ? 50.5 : tickValue2;
        tickValue2 = (tickValue2 == 50.5) ? 50.5 : tickValue2;
    }

    private void tickChange(Microsoft.AspNetCore.Components.ChangeEventArgs args)
    {
        tick = Convert.ToDouble(args.Value);
        if (min == 0)
        {
            tickValue2 = Convert.ToDouble(args.Value);
        }
        else
        {
            tickValue = Convert.ToDouble(args.Value);
        }
    }
    public class DropdownList
    {
        public string Value { get; set; }
        public string Name { get; set; }
    };
    public List<DropdownList> rangeBarColor = new List<DropdownList> {
        new DropdownList { Value="#FFDD00", Name="#FFDD00" },
        new DropdownList { Value="#00bdae", Name="#00bdae" },
        new DropdownList { Value="#FF2680", Name="#FF2680" }
    };
    public List<DropdownList> rangeColor = new List<DropdownList> {
        new DropdownList { Value="#E0E0E0", Name="#E0E0E0" },
        new DropdownList { Value="#7bb4eb", Name="#7bb4eb" },
        new DropdownList { Value="#ea7a57", Name="#ea7a57" }
    };
    public List<DropdownList> PointerColor = new List<DropdownList> {
        new DropdownList { Value="#424242", Name="#424242" },
        new DropdownList { Value="#6f6fe2", Name="#6f6fe2" },
        new DropdownList { Value="#9e480e", Name="#9e480e" }
    };
    public List<DropdownList> rangeBarColorTwo = new List<DropdownList> {
        new DropdownList { Value="#FF2680", Name="#FF2680" },
        new DropdownList { Value="#00bdae", Name="#00bdae" },
        new DropdownList { Value="#FFDD00", Name="#FFDD00" },
    };
    public List<DropdownList> rangeColorTwo = new List<DropdownList> {
        new DropdownList { Value="#E0E0E0", Name="#E0E0E0" },
        new DropdownList { Value="#7bb4eb", Name="#7bb4eb" },
        new DropdownList { Value="#ea7a57", Name="#ea7a57" }
    };
    public List<DropdownList> PointerColorTwo = new List<DropdownList> {
        new DropdownList { Value="#424242", Name="#424242" },
        new DropdownList { Value="#6f6fe2", Name="#6f6fe2" },
        new DropdownList { Value="#9e480e", Name="#9e480e" }
    };
    public void rangeBarColorchange(Syncfusion.EJ2.Blazor.DropDowns.ChangeEventArgs<string> args)
    {

        rangeBarColorValue = args.Value;
    }
    public void rangeBarColorTwochange(Syncfusion.EJ2.Blazor.DropDowns.ChangeEventArgs<string> args)
    {

        rangeBarColorValueTwo = args.Value;
    }
    public void rangeColorchange(Syncfusion.EJ2.Blazor.DropDowns.ChangeEventArgs<string> rangeArgs)
    {
        rangeColorValue = rangeArgs.Value;
    }
    public void rangeColorTwochange(Syncfusion.EJ2.Blazor.DropDowns.ChangeEventArgs<string> rangeArgs)
    {
        rangeColorValueTwo = rangeArgs.Value;
    }
    public void pointerColorchange(Syncfusion.EJ2.Blazor.DropDowns.ChangeEventArgs<string> rangeArgs)
    {
        pointerColorValue = rangeArgs.Value;
    }
}